<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title>ƒ∞smail Efe's Blog Site</title>
<link>https://ismailefe.org/</link>
<description>ƒ∞smail Efe's Second Brain.</description>
<language>en</language>
<atom:link href="https://ismailefe.org/feed.xml" rel="self" type="application/rss+xml"/>
<lastBuildDate>Sun, 13 Oct 2024 15:53:56 +0300</lastBuildDate>
<item>
  <title>My Design Stack</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">My Design Stack</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-10-13</p>
</header>
<p>
      If you are familiar with frontend and backend development, you've likely
      come across tech stacks. You can think of tech stacks as a list of tools
      people use to create applications. People can share their stack and others
      can get inspired or learn about new technologies.
    </p>
<p>
      While it is common to find different stacks when working in the
      programming field. You don't see them utilized in other fields, such as
      <strong>design</strong>. Since I picked up a lot of design jobs and create
      a lot of slides, I wanted to create a <strong>design stack</strong> and
      share what I use and how I use them.
    </p>
<p>
      I am calling this the <strong>PCSG stack</strong>. Before I start
      explaining, I want to go over two things.
    </p>
<ul>
<li>
<p>
          I am a student on a budget and can't afford multiple subscriptions. I
          try to unnecessary avoid costs as much as possible, that is why all of
          my recommendations are free to use.
        </p>
</li>
<li>
<p>
          I don't want to steal anyone's hard work. If a recommendation includes
          user-generated content, it comes with an open commercial license or is
          public domain.
        </p>
</li>
</ul>
<h1 id="photopea">Photopea</h1>
<p>
<a href="https://www.photopea.com/">Photopea</a> is a browser-based photo
      editor. Coming from
      <a href="https://www.adobe.com/products/photoshop.html">Adobe Photoshop</a>, I find it easy to work with, as Photopea draws heavily from Photoshop's
      interface, shortcuts and features.
    </p>
<p>
      Since there is a lot of different options when it comes to photo editors,
      I want to list the things I like about Photopea:
    </p>
<ul>
<li>
        Runs locally in your browser. That means you can open it on almost any
        device and run it offline.
      </li>
<li>
        Can open PSD files flawlessly, it also supports
        <a href="https://github.com/photopea/photopea">a bunch of formats</a>.
      </li>
<li>
        You can use it for free with ads. -$5 gets you an ad-free experience, 5
        GB storage, and some AI credits-
      </li>
<li>
        Houses almost all of the Google Fonts library. -I will talk about Google
        Fonts in a sec-
      </li>
<li>
        It has a large community that offers plenty of tutorials and technical
        support.
      </li>
</ul>
<h1 id="colorhunt">Colorhunt</h1>
<p>
<a href="https://colorhunt.co/">Colorhunt</a> is a website that hosts
      curated color palettes. I use this website very often; you can search for
      specific color palettes, sort by popularity, and add palettes to your
      collection.
    </p>
<p>
      Colorhunt comes in handy when I have to quickly select a contrasting color
      scheme for a slide or when I need inspiration for a project.
    </p>
<h1 id="svg-repo">SVG Repo</h1>
<p>
      I think I speak for all designers when I say SVGs are awesome! If you
      don't know what an SVG is, I recommend
      <a href="https://www.youtube.com/watch?v=emFMHH2Bfvo">this video</a>, as
      it does a great job of explaining.
    </p>
<p>
<a href="https://www.svgrepo.com/">SVG Repo</a> is a wonderful way to get
      SVGs. It houses "500.000+ Open-licensed SVG Vector and Icons" and comes in
      handy A LOT when doing design work.
    </p>
<p>
      Most of them have licenses that enable you to use them however you want. I
      generally make use of SVGs in slides, posters, social media contents, and
      websites.
    </p>
<h1 id="google-fonts">Google Fonts</h1>
<p>
<a href="https://fonts.google.com/">Google Fonts</a> is one of my favorite
      sites to use. It houses more than a thousand fonts, and all of them have
      open licenses. All the fonts hosted have unique personalities, and you can
      easily find one that suits your needs.
    </p>
<p>
      For example, my website mainly uses
      <a href="https://fonts.google.com/specimen/EB+Garamond">EB Garamond</a>
      and
      <a href="https://fonts.google.com/specimen/Gentium+Plus">Gentium Plus</a>,
      which I found and got from Google Fonts.
    </p>
<p>
      Google Fonts also has
      <a href="https://fonts.google.com/knowledge">wonderful articles</a> that
      teach you how to select fonts, where to use them, and how to use them.
      These articles are a must-read for any designer.
    </p>
<p>
      If you are a webmaster, you can use Google Fonts on your websites without
      downloading or hosting anything. This can be achieved by getting embed
      links for the fonts you want to use and importing them with just one line
      of CSS.
    </p>
<h1 id="bonus">Bonus</h1>
<p>
      Accessibility is something I deeply care about. A lot of my design work
      comes in the form of web design. For more people to have the ability to
      view my website comfortably, I need to be operating within the
      <a href="https://www.w3.org/WAI/WCAG22/Understanding/contrast-minimum">W3 contrast standards</a>. I use 2 sites for checking whether I am following this standard or not.
    </p>
<p>
      First is <a href="https://colourcontrast.cc/">Colour contrast checker</a>,
      this site lets me check the AA and the AAA value. If my color combination
      doesn't pass, I proceed to use the second site.
    </p>
<p>
      Second is <a href="https://app.contrast-finder.org/">Contrast Finder</a>,
      this site helps me find a color that both passes the standard and is
      similar to my original color using an algorithm.
    </p>
<h1 id="closing-words">Closing Words</h1>
<p>
      Thanks a lot for reading about my easy to incorporate but horribly named
      design stack.
    </p>
<p>
      I don't do any video, 3D, or professional vector work. That's why my flow
      might be lacking in these and some other areas, but I am sure that you can
      find something valuable to add into your own workflow.
    </p>
<p>
      If you have any suggestions or criticism, feel free to reach through
      <a href="mailto:ismailefetop@gmail.com">my email</a>.
    </p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/my_design_stack/index.html</link>
  <guid>https://ismailefe.org/blog/my_design_stack/index.html</guid>
  <pubDate>Sun, 13 Oct 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>5 Life Lessons</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">5 Life Lessons</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-09-14</p>
</header>
<p>
      I‚Äôve been reflecting on life for the past couple of months, and my world
      view has changed a lot. I feel like I have grown as a person, and I wanted
      to share the lessons I‚Äôve learned during this time and throughout my life.
      <strong>Here are 5 life lessons from a 20-year-old.</strong>
</p>
<h1 id="calling-an-ambulance">Calling an ambulance</h1>
<p>
      A lot of people my age tend to question if calling an ambulance is the
      right thing to when faced with health and emergency situations. I can
      understand the reasoning, as these kinds of situations are almost always
      in gray areas.
    </p>
<p>
      Here is a simple trick if you want to decide if you should call an
      ambulance; <strong>call 911</strong>.
    </p>
<p>
      If the situation escalates into you thinking you might need an ambulance,
      that's all the reason you need. Even if you think the situation might be
      minor and you think you might waste a first responders time, you should
      call. Because this is what first responders are for and you won't waste
      anyone's time.
    </p>
<p>911 operators are trained professionals and will know what to do.</p>
<p>
      In the worst-case scenario, where you call 911 and an ambulance isn‚Äôt
      necessary, they will connect you to a medical professional who can guide
      you on what to do next and also will advise you to call again if the
      situation worsens.
    </p>
<p>
      And, worst case scenario, if you don't call 911, is the situation
      escalating and <strong>someone dying</strong>.
    </p>
<h1 id="fake-it-till-you-make-it-is-a-powerful-weapon">
      "Fake it till you make it" is a powerful weapon
    </h1>
<p>
      We humans tend to think the worst of situations. We feel like we are not
      good enough, feel like we don't have what it takes, and so on.
    </p>
<p>
      And we act accordingly to this. Whether in a work or a school setting, we
      find ourselves in situations where we don't want to speak up or step on
      anyone's toes.
    </p>
<p>
      We also feel like we are not good enough to achieve our dreams. Hell,
      sometimes we don't even dare to dream.
    </p>
<p>
      The best way to shake of this mindset is to fake your ideal mindset into
      existence.
    </p>
<p>
      In my opinion, while hard and sometimes cringe, it is the best way to deal
      with low self-confidence and self-worth.
    </p>
<p>
      Think of yourself as your ideal self, work hard, speak your mind on
      things, and dream big. Even if you are faking it and are well aware of the
      fact, with time, it will turn into reality.
    </p>
<h1 id="books-textbooks-and-youtube-videos">
      Books, textbooks, and YouTube videos
    </h1>
<p>Let's say that you want to learn about investing;</p>
<p>
      Introduction to investing books or textbooks are
      <strong>10 times slower</strong> than watching a YouTube video.
    </p>
<p>But‚Ä¶ they are <strong>100 times</strong> more effective.</p>
<p>
      Let me explain, if you are not watching an actual university lecture. What
      you are watching is a fast-paced tutorial that tries to cram as much as
      possible into the shortest possible amount of time.
    </p>
<p>In these kinds of videos‚Ä¶</p>
<ul>
<li>
        You are not able or encouraged to take notes because of it's fast-paced
        nature.
      </li>
<li>Rewinding is always a bother.</li>
<li>
        And because you are not taking the lesson at your own pace, your brain
        doesn't want to absorb it.
      </li>
</ul>
<p>
      And don't get me started on how distracting it is to learn something in
      YouTube where entertainment is one click away and everything else is one
      tab away.
    </p>
<p>
      Yes, reading about something can be really slow. But because you are the
      one deciding the pace, your brain has an easier time absorbing the
      information.
    </p>
<p>
      If buying books are becoming too expensive or cumbersome, investing in a
      nice e-book reader might be a great idea.
    </p>
<h1 id="the-only-person-you-can-truly-depend-upon-you">
      The only person you can truly depend upon: You
    </h1>
<p>
      Family and friends are one of the most important things in the world. You
      should love, cherish, and trust them. But you can't lean on them for all
      situations.
    </p>
<p>
      There will be times where you need or have to go through something on your
      own. These challenges tend to be hardest and being prepared is important.
    </p>
<p>
      Always work and invest in yourself. People can die, material things can
      perish. The only person you can depend on is you. Because if you are no
      more, then all is done.
    </p>
<p>
      I also think that life has a lot more meaning when you work on yourself
      regularly. When you eat healthy, read, exercise, or do anything that helps
      you become a better person. You feel like you are more in control and the
      things that cannot be changed becomes more bearable.
    </p>
<h1 id="the-only-metric-of-success-happiness">
      The only metric of success: happiness
    </h1>
<p>
      Until this year, I thought that success would come in the form of money or
      fame. But it turns out I was extremely wrong.
    </p>
<p>
      Money doesn't mean anything if you are not happy. Fame doesn't mean
      anything if you are not happy. Career advancement doesn't mean anything if
      you are not happy.
    </p>
<p>
      Of course, you don't have to be happy constantly. But if you have all the
      things above and you don't feel any happiness, what is the point?
    </p>
<p>
      Everyone would choose being a happy person in a cheap car than be a sad
      person in a Porsche.
    </p>
<p>
      If material things bring you happiness go for it. If traveling brings you
      happiness travel. If being alone and doing your own thing brings you
      happiness do that. Also, you don't have to do these things right now. Even
      dreaming about these is a lot of fun.
    </p>
<p>
      In my opinion, having the people you love nearby, working on your goals
      and self, and having the insight to recognize what truly matters in life
      is the key to happiness and living a content life.
    </p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/5_life_lessons/index.html</link>
  <guid>https://ismailefe.org/blog/5_life_lessons/index.html</guid>
  <pubDate>Sat, 14 Sep 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>Why Use Emacs?</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">Why Use Emacs?</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-08-19</p>
</header>
<p>
      This article is about my relationship with Emacs as a 20 year old university
      student. First of all, Emacs is a text editor that has been around for a
      really long time, 48 years to be exact. It still gets updated regularly
      and has a thriving community that continuously grows. The main selling
      point of Emacs is how extensible it is. You can change any of it's part
      using
      <a href="https://en.wikipedia.org/wiki/Emacs_Lisp?useskin=vector">Emacs Lisp</a>.
    </p>
<p>
      That is all you need to know to read this article as I will talk about all
      of this in detail.
    </p>
<br/>
<div style="max-width: fit-content; margin-left: auto; margin-right: auto">
<img alt="A drawing of an ivy." src="/blog/why_use_emacs/ivy.png" width="250px"/>
</div>
<p>
      I envy people who can just pick up a tool and start using it right away
      without the constant need to perfect it. Small imperfections distract me,
      and my mind sways away to solve it. This usually prevents me from getting
      work done.
    </p>
<p>
      Up until 2022, I would start writing something in a random text editor,
      notice a behavior I wanted to change or disable, search it for a few
      minutes on how to change it, change it (if it were possible), and repeat
      this cycle every 20 minutes. A couple days later, I would find an
      unchangeable behavior that is a deal-breaker and try to find a new text
      editor.
    </p>
<p>
      This continued until I started considering Emacs as a serious solution to
      my needs. I learned the existence of Emacs in 2019 thanks to a
      <a href="https://www.youtube.com/watch?v=Y8koAgkBEnM">DistroTube video</a>. After a few months, I tried
      <a href="https://github.com/doomemacs/doomemacs">Doom Emacs</a>, a kind of
      a starter-pack config, and couldn't see the point of using it as I didn't
      need anything other than a simple code editor at the time.
    </p>
<p>
      In 2022, for reasons I sadly do not remember, I gave Doom Emacs another
      try. This time was a lot better. My university lessons were getting
      serious and I needed a way to take notes efficiently and distribute them
      as I needed. As an added bonus I was really deep into vim motions and Doom
      Emacs was built around
      <a href="https://github.com/emacs-evil/evil">evil-mode</a>, which
      "emulates the main features of Vim".
    </p>
<p>
      It took me around a year to get completely comfortable and I no longer
      feel the need to tweak
      <a href="https://github.com/ektaynot/doom">my config</a> frequently. But I
      should note that learning Emacs is a journey with no end. Every day I
      learn something new about Emacs.
    </p>
<p>
      Firstly, I want to give a brief explanation to what Emacs is for me, then
      talk about the limitations, and finally list the reasons why I like it so
      much.
    </p>
<p>
      For me, Emacs is a text editor that is infinitely extendable,
      keyboard-driven, modular, and immortal. It's basically a bunch of elisp
      file taped together. The best part is you can tape your own elisp code
      easily and it works as though it was always there. There is no "Emacs
      talks to your elisp code", your code is Emacs.
    </p>
<p>
      Emacs can easily be the best text editor, coding environment, or a
      Frankenstein that adapts to your workflow. For example, I turned Emacs
      into the ultimate writing environment that spellchecks, organizes, and
      converts my notes into beautiful word documents with custom styling or
      functional sites with html and css code bundled.
    </p>
<h1 id="limitations">Limitations</h1>
<p>
      Before I get into more about the reasons I use it, I want to talk about
      it's limitations.
    </p>
<h2 id="learning-curve">Learning curve</h2>
<p>
      For most people, Emacs won't be perfect out of the box. There will be tons
      of stuff that won't work for you. And to change those things you will need
      to read a lot of documentations, discussions, and github issues. Lisp is a
      foreign language for most people and learning such an alien language for
      customizing a text editor might be too much. Even if you don't mind
      tackling a new language, investing such a big time might be a deal-breaker
      for some.
    </p>
<p>
      There are a lot of good videos, documentation, etc. But the main issue is
      how much time it takes to perfect it. Because the options are endless,
      there are a lot of cool stuff you can do and you find yourself taken away
      by your creativity to execute those ideas. I have lots of cool functions
      that do bunch of useful things, which I will talk about them in the end.
    </p>
<p>
      Don't get me wrong, it definitely pays of exponentially. But if you are in
      the middle of a busy school year or you are working a really busy job, I
      would recommend you to start learning it when you have a time off.
    </p>
<h2 id="things-breaking">Things breaking</h2>
<p>
      Things sadly break a lot when you are a beginner. Most of the time it
      turns out the be your fault and you have a general idea of how to solve
      it. The worst is when an update breaks things. This usually happens when
      you install a lot of third-party packages. There are times when you don't
      know what caused the issue and there are times that even if you know what
      caused the issue, you don't know how to fix it. This rarely happens, but
      really sucks when it does.
    </p>
<p>
      A lot of the breakage goes away or becomes really minor when you have
      experience. But sadly, even the most seasoned among us experience these
      things.
    </p>
<h2 id="not-great-to-use-on-mobile">Not great to use on mobile</h2>
<p>
      While nobody codes on their phone seriously, a lot of people take notes on
      their phone. Emacs has a wonderful mode called
      <a href="https://orgmode.org/">Org</a>. Org-mode is awesome for
      note-taking, schedule managing, and literate programming. I will get into
      more detail later.
    </p>
<p>
      Wanting to access your shopping list or any other note is important. And
      accessing them from your phone is not the best. While there are tons of
      org-mode apps for android and a couple for iOS, you can only do so much.
      Creating a system that works for you with small stuff is possible if you
      invest enough time but I personally gave up and use
      <a href="https://bear.app">Bear</a> for quick notes and to-do's.
    </p>
<p>
      If you want to try using org notes in mobile, I would recommend
      <a href="https://www.orgzly.com/">orgzly</a> for Android and
      <a href="https://plainorg.com/">Plain Org</a> for iOS.
    </p>
<h1 id="why-use-it">Why use it</h1>
<p>
      Now comes the fun part. Talking about the positives and what makes Emacs
      unique.
    </p>
<h2 id="flexibility">Flexibility</h2>
<p>
      You can change a lot of things and I am not talking about changing
      appearance or ability to add extensions. Almost everything in Emacs is a
      function in an Elisp file.
    </p>
<p>
      There are also major and minor modes that activate according to the buffer
      you are on. You can combine modes together and create powerful workflows.
    </p>
<p>
      You can write functions or packages that talks to core Emacs functions and
      write anything you can imagine.
    </p>
<p>
      When using Vim or Neovim, there are some restriction that come from your
      terminal emulator. But because Emacs is a GUI application, you can have a
      greater control. For example, I like my text editor to look minimalistic
      as much as possible. To achieve this, I disabled line numbers, titlebar
      decoration, highlighting of the current line, and much more.
    </p>
<p>Here is the final result:</p>
<img alt="An image of my Emacs window." src="/blog/why_use_emacs/emacs.webp"/>
<p>
      In most editors, to change a core functionality, you have to write a
      package that needs to follow a large set of guidelines and have bunch of
      formalities. In Emacs you only need an elisp file and load that file at
      startup. Nothing else.
    </p>
<h2 id="org">Org</h2>
<p>
      Org mode is
      <strong>"A GNU Emacs major mode for keeping notes, authoring documents,
        computational notebooks, literate programming, maintaining to-do lists,
        planning projects, and more ‚Äî in a fast and effective plain text
        system."</strong>
      -<a href="https://orgmode.org">orgmode.org</a>
</p>
<p>This is a good introduction but I think I can expand more upon this.</p>
<p>
      Org documents are plain-text files that end with '.org'. Org can be used
      as a markup language like
      <a href="https://www.markdownguide.org/getting-started/">Markdown</a>, but
      using it just as a markup language would be a bit wasteful. Org can help
      you organize your life with
      <a href="https://www.youtube.com/watch?v=8BOiRmjw5aU">org-agenda</a>, can
      be an interactive programming notebook like
      <a href="https://jupyter.org/">Jupyter</a>, can help you do literate
      programming with org blocks, and can replace apps such as Microsoft Word,
      Microsoft PowerPoint, Mail, Calendar, and much more.
    </p>
<p>
      Now that we have a general explanation, I can talk about my personal
      use-case for Org.
    </p>
<h3 id="writing-class-notes-and-blog-posts">
      Writing class notes and blog posts
    </h3>
<p>
      Org has the habit of gently pushing you the way of correct note-taking. I
      know that there is not a single correct way to take notes but I think the
      default Org behaviors are a pretty general guideline to how you should
      take notes.
    </p>
<p>
      I took notes in Org for two semesters. These two semesters I had tons of
      different classes and mostly used Org in two ways: taking notes while the
      teacher speaks and writing long essays about different topics at home.
    </p>
<p>
      Thanks to how Org forces you to act in a certain way, the notes I take
      during classes comes out nicely structured and has no need to do
      post-cleaning.
    </p>
<p>
      And thanks to my Org related functions, I am able to write long essays
      without leaving Emacs.
    </p>
<h3 id="exporting">Exporting</h3>
<p>
      The ability to turn your .org files into .docx, .pdf, and .html files
      effortlessly might be my favorite functionality. If you give a little bit
      more effort, you can even export with a custom style-sheet. I have a
      <a href="https://ismailefe.org/blog/my_org_pandoc_workflow/">whole post</a>
      talking about this.
    </p>
<h3 id="literate-programming">Literate Programming</h3>
<p>
      While I love the idea of
      <a href="https://en.wikipedia.org/wiki/Literate_programming">Literate Programming</a>, I don't practice it except for one occasion; my
      <a href="https://github.com/ektaynot/doom">Doom Emacs config</a>. Having a
      config that explains itself is a godsend for both other people and future
      you.
    </p>
<p>
      You can write notes, add links, and create test areas in an Org file and
      make it tangle to a proper config file automatically at every save.
    </p>
<h3 id="packages-i-use-for-org">Packages I use for Org</h3>
<ul>
<li>
<p>
          I use <a href="https://github.com/kawabata/ox-pandoc">ox-pandoc</a>,
          <a href="https://github.com/joostkremers/pandoc-mode">pandoc-mode</a>,
          and
          <a href="https://github.com/tecosaur/org-pandoc-import">org-pandoc-import</a>
          for exporting.
        </p>
</li>
<li>
<p>
          I use
          <a href="https://github.com/andras-simonyi/citeproc-el">citeproc</a>
          and <a href="https://github.com/jkitchin/org-ref">org-ref</a> for
          biblio. I configured <a href="https://www.zotero.org/">zotero</a> to
          auto export my bib files and these packages read from those file. So,
          I can easily add citations and end-texts to my Org documents.
        </p>
</li>
<li>
<p>
          I use
          <a href="https://github.com/yilkalargaw/org-auto-tangle">org-auto-tangle</a>
          for tangling my config.org file.
        </p>
</li>
</ul>
<h2 id="evil-mode">Evil-mode</h2>
<p>
      I mentioned evil-mode in the beginning but I can't emphasize how important
      it is for me. I have the complete power of vim inside Emacs. I can create
      macros and use all of the keybindings without any configuration thanks to
      <a href="https://github.com/doomemacs/doomemacs">Doom Emacs</a>. Without
      evil-mode, I would have probably give up learning Emacs.
    </p>
<h2 id="my-custom-functions">My custom functions</h2>
<p>
      I have tons of functions that are mostly written by me and ChatGPT. Emacs
      community doesn't really condone the use of AI in general but I recommend
      the use of AI to beginners with the condition that they should question
      and research the output. AI can be dumb and give you bad code. Always ask
      for it to break down the output and validate the end result yourself while
      looking at documentation. After a certain point you should be able to
      write small functions and then you don't have to ask AI for a whole
      function but just help with small parts. I think this is the best way to
      approach learning elisp to configure Emacs. Here is a list of my most-used
      functions. -You can see the code in
      <a href="https://github.com/Ektaynot/doom/blob/master/config.org#functions">my config.org</a>
      under the functions heading.-
    </p>
<ul>
<li>
<p>
<strong>efe/google-current-word:</strong> This is a function that
          googles the word at point and opens it in your default browser. I use
          this when I encounter a new concept or when I misspell a word so hard
          that only Google knows what I mean.
        </p>
</li>
<li>
<p>
<strong>efe/first-result-url:</strong> Gives the word at point to a
          script called
          <a href="https://gist.github.com/Ektaynot/46681539aa1c030b3a58986e7f3df397">firstresult</a>. This in turn copies the first result from a google search. Really
          useful when you want to create a hyperlink and need a link to the
          github repo or the official website without opening your browser.
        </p>
</li>
<li>
<p>
<strong>efe/tureng-(turkish/english):</strong>
<a href="https://tureng.com/tr/turkce-ingilizce">Tureng</a> is a
          community driven dictionary. I use this function to look at different
          meanings of a word. It displays 10 different meanings in the echo area
          and goes away when you press anything. Sadly, I can't share how I get
          the results as it may or may not breach the user agreement.
        </p>
</li>
<li>
<p>
<strong>efe/open(-project)-in-vscode:</strong> Pretty
          self-explanatory, either opens the file or the project in VS Code. It
          uses the doom-modeline‚Äìproject-root variable, so the function might
          not work in vanilla Emacs.
        </p>
</li>
</ul>
<p>There are more functions in my config.org, feel free to check it out.</p>
<h1 id="closing-words">Closing Words</h1>
<p>
      Thanks for reading my Emacs propaganda. I love this program so much that I
      feel the constant need to talk about it.
    </p>
<p>
      I really feel like everyone can benefit from using Emacs. It just takes
      time a long time to be efficient in it.
    </p>
<p>Feel free to reach to me about anything via email.</p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/why_use_emacs/index.html</link>
  <guid>https://ismailefe.org/blog/why_use_emacs/index.html</guid>
  <pubDate>Mon, 19 Aug 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>My Writing Tools</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">My Writing Tools</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-07-12</p>
</header>
<p>
      I love writing, it helps me empty my mind and improve my ability to
      express myself. While I enjoy writing digitally the most, I have to write
      to a paper often because of school and other circumstances.
    </p>
<p>
      I have a few friends that accompany me while I write. I acquired these
      friends throughout my life, each has their own unique stories and reasons.
      They make writing easy and fun for me. I will introduce them
      chronologically.
    </p>
<h1 id="rotring-500">Rotring 500</h1>
<p>
      If you want to learn more, you can
      <a href="https://ismailefe.org/blog/rotring500/">check out my previous post</a>
      where I talked about this pen in more detail.
    </p>
<p>
      This is a mechanical pencil that I bought by chance when I was preparing
      for university exam. I solved every test, mock exam, and problem with this
      pen. It is lightweight but has a nice build quality. While it is cheap, it
      doesn't feel like it. When I first saw this pen I fell in love with it's
      pure black body and it's italic red font.
    </p>
<p>
      When I look at it objectively, it may not be the most ergonomic pen, but I
      enjoy using it so much that any discomfort from writing for long hours
      doesn't bother me a bit. I usually notice the fatigue in my wrists after I
      am done writing.
    </p>
<p>
      I also used it a lot during my preparation year at university and my first
      year. I entered all of my exams with it and always carried it with me. I
      still use it from time to time but my newly bought Rotring 800 became the
      primary mechanical pencil I use.
    </p>
<p>
      I recommend it to everyone who wants a good-looking mechanical pencil that
      is light and long lasting.
    </p>
<h1 id="pensan-b√ºro">Pensan B√ºro</h1>
<p>
      While I haven't seen this pencil anywhere other than T√ºrkiye, it is
      probably the most popular pencil here. It is a dirt cheap ballpoint pend
      that is usually in blue color. Every Turkish person probably used it at
      some point in their life. I can't stress this enough, this particular pen
      is sold and used everywhere. From government offices to sports-books.
    </p>
<p>
      In addition to it's availability, there is another big reason, this thing
      SLIDES. It is so smooth to write on any surface.
    </p>
<p>
      I use a ballpoint pen when I want to go crazy. Creating diagrams, writing
      questions in bold and sketching solutions. My main goal is writing ideas
      fast. And this pen is the best when it comes to that.
    </p>
<p>
      It is also really light and has a pen clip. You can attach it's cap to
      it's back and extend it. What else can you want from a pen?
    </p>
<h1 id="hhkb-professional-bt">HHKB Professional BT</h1>
<p>
      I was really into custom keyboards from 2019 to 2023. I would follow
      custom keyboard youtubers and subreddits. I would listen to tons of typing
      tests and would dream of "end-game" keyboards like Keycult and TGR.
    </p>
<p>
      Luckily the dollar exchange rate was somewhat stable when I started the
      hobby and I got the chance to try a lot of custom boards and switches.
      While I did try a lot of different mechanical keyboards, there was a one
      keyboard that I wasn't able to try. It was a keyboard called Happy Hacking
      Keyboard (HHKB) and unlike all of the keyboards I used in the past, it
      didn't have mechanical switches. Instead, it used a patented electrostatic
      capacitive Topre switch. These switches were produced by Topre Corporation
      in Japan and didn't seem to have a counterfeit alternative that I could
      order from Aliexpress to try.
    </p>
<p>
      These switches were used by a couple of different keyboard brands. The
      most popular one was the HHKB and they were praised as the ultimate
      keyboard because of their 'godly feel' and the layout. There were a lot of
      custom keyboards that used the HHKB layout. You can learn more about the
      HHKB layout in
      <a href="https://hhkeyboard.us/blog/hhkb-layout#what">HHKB's official blog post</a>.
    </p>
<p>
      Another characteristic of a HHKB keyboard is how expensive they are. The
      base model's price starts at 300 dollars and they are especially expensive
      in countries that don't have a official distributor because of the heavy
      import fee.
    </p>
<p>
      For a really long time I searched local second-hand sites for one and
      finally found it in Jan 2023. I bought it in person from a foreign guy
      that bought it a couple of years before, in his trip to Japan. He sold it
      to me for a fair price and I finally had a HHKB keyboard.
    </p>
<p>
      Was it as good as people deemed it to be? Yes, it was. The keys felt
      heavenly and the layout was great. I retired my custom keyboards and used
      the HHKB primarily. While I didn't carry it with me everywhere, it felt
      special every time I had the chance to type on it. I loved that thing.
    </p>
<p>
      After using it for a year I sadly developed carpal tunnel syndrome. I
      would get heavy wrist pain after a couple of minutes of using it. Even
      though it saddens me, I had to stop using it.
    </p>
<h1 id="logitech-wave-keys">Logitech Wave Keys</h1>
<p>
      While I was researching ergonomic keyboards like
      <a href="https://github.com/foostan/crkbd">The Corne</a> and
      <a href="https://ergodox-ez.com/">Ergodox Ez</a>, I came across
      <a href="https://www.logitech.com/en-us/products/keyboards/wave-keys-ergonomic-wireless.920-011898.html">Logitech Wave Keys</a>. To be honest, this keyboard wasn't my first choice. But because it was
      tenth the price of the other keyboards I was looking at, I had no other
      real choice. I bought it second-hand and waited.
    </p>
<p>
      When I first started typing, I was honestly quite surprised as it felt
      similar to my HHKB. It was really large and the keys were dome-like and
      low-profile.
    </p>
<p>
      This keyboard's main selling point is it's wave pattern across it's keys.
      It's suppose to help people who suffer from wrist pain and people who
      spend a lot of time in front of a desk.
    </p>
<p>
      To my surprise, it almost completely eliminated my wrist and hand pain. It
      also felt great to type on. It honestly saved me from spending a ton of
      money on a split keyboard that I would have to import and pay additional
      taxes on.
    </p>
<h1 id="conclusion">Conclusion</h1>
<p>
      While some of these got replaced, they will always be tools that I
      cherish. I see them all as milestones that helped me in numerous ways.
    </p>
<p>
      Ironically, I wrote this post with my laptop's keyboard. This is the case
      for a lot of my posts as I like to write outside. I did not include my
      laptop's keyboard because it is trivial and isn't anything special. Also,
      being mindful of when I use my beloved tools makes using them more
      special.
    </p>
<p>
      Thanks a lot for reading. It has been a lengthy post that I really enjoyed
      writing. Feel free to email me if you want to share your writing tools or
      anything else. I love getting emails from humans!
    </p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/writing_tools/index.html</link>
  <guid>https://ismailefe.org/blog/writing_tools/index.html</guid>
  <pubDate>Fri, 12 Jul 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>Hobbies</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">Hobbies</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-04-23</p>
</header>
<p>
      I recently found myself juggling a lot of hobbies. They take up almost all
      of my free time and I want to talk about them. I will mention the
      interesting ones as I don't want to talk about ‚ÄúHow I like to take walks‚Äù
      or ‚ÄúHow I like to discover new restaurants‚Äù.
    </p>
<h1 id="graphic-design">Graphic Design</h1>
<p>
      While I am not a professional, I did my fair share of design work. I
      designed and wrote my high school newspaper, I did Instagram posts for my
      department, and I did a lot of restoration work for my personal enjoyment.
    </p>
<p>
      I love minimalist design, there is something in it that speaks to me.
      Those neutral colors, big popping fonts and an inviting aura. When I
      approach a task I try to take away as much as I can. Only the needed
      should remain. In my opinion, the quote that best describes minimalist
      design is
      <strong>‚ÄúPerfection is achieved, not when there is nothing more to add, but
        when there is nothing left to take away.‚Äù</strong>
      by Antoine de Saint-Exup√©ry.
    </p>
<h1 id="maintaining-a-website">Maintaining a Website</h1>
<p>
      Whenever I look at a personal website that I've never seen before, I try
      to look for different approaches the site owner took. Like is there a
      navbar, is there a table of contents, what color did they used, is there
      javascript, etc. That is something that I never done before I had my own
      site. This results in a constant cycle of inspiration and evolution.
    </p>
<p>
      Because I don't use a generator in general sense, I have to do a lot of
      things by hand. Like generating RSS, generating a sitemap, optimizing
      pictures, SEO optimizations, fixing errors made by the
      <a href="https://pandoc.org">org to html converter</a>, etc. While this
      takes manual labor, I love it. Some people enjoy writing blog posts and
      some enjoy making websites, I enjoy both!
    </p>
<p>
      Also, if I used a blog generator, I wouldn't have learned how
      <a href="https://ismailefe.org/blog/rss/">RSS</a>, sitemaps, and SEO
      worked. I recommend everyone to learn the basics of html and css, and then
      host their own blog with a free service like GitHub pages!
    </p>
<h1 id="visiting-flea-markets">Visiting Flea Markets</h1>
<p>
      I love wandering around flea markets, there are tons of great stuff that
      are dirt cheap. Old technologies that still work great, old clothes that
      can be made new with a quick trip to a dry cleaner, cool desk accessories,
      35mm films, camera gears, and many many more.
    </p>
<p>
      Seeing things that were revolutionary when they first came out and talking
      with the people that sell them is a joy I get to experience every month.
      While there is a lot of good flea markets that I visit, the one I like the
      most is √áayyolu Antika Pazarƒ±. I like √áayyolu because it is not as crowded
      as others and the things they sell are more high quality. Also most of the
      sellers are there to make friends and get to know new people, I like those
      kinds of sellers the most. Because their main goal is not to profit the
      most they can, their main goal is to have a good time!
    </p>
<p>
      While I do buy a lot of unnecessary stuff, the joy I get from talking with
      these people and seeing literal history makes visiting flea markets an
      irreplaceable hobby.
    </p>
<h1 id="configuring-emacs">Configuring Emacs</h1>
<p>
      I spent so much time configuring this program that I could even say Emacs
      is my part-time job. I definitely
      <strong>spend more time sharpening than cutting.</strong>
</p>
<p>
      But Emacs has become such an efficient tool that I think it
      <strong>cuts</strong> the time I spent on homework in half. It formats,
      converts, spellchecks, gives synonyms, translates, it manages and inserts
      citations, prints references, and much more. And like maintaining a site,
      I enjoy working on my config. Even if I didn't, I would think of it as an
      investment because it is a tool that I will surely be using for a really
      long time.
    </p>
<h1 id="shooting-analog">Shooting Analog</h1>
<p>
      I got into the analog world thanks to a friend more than a year ago.
      While I did make some mistakes that resulted in burned films, I think I
      learned my lesson.
    </p>
<p>
      I like shooting in color. My favorite film is Kodak Gold 200, the way that
      it captures the sunlight mesmerizes me. You can see some of the pictures I
      took at my <a href="https://ismailefe.org/photos/">photos page</a>.
    </p>
<p>
      Other than that I use a Agfa Optima as my main film camera. I like compact
      analog cameras. For me, having a big lens that you have to adjust every
      time defeats the purpose.
    </p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/hobbies/index.html</link>
  <guid>https://ismailefe.org/blog/hobbies/index.html</guid>
  <pubDate>Tue, 23 Apr 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>My Org+Pandoc Workflow</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">My Org+Pandoc Workflow</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-03-29</p>
</header>
<p>
<strong>Disclaimer: <a href="https://www.gnu.org/software/emacs/">Emacs</a> is
        necessary for being able to do the things shown below.</strong>
</p>
<p>
      Excluding chats, %99 of what I write is written in
      <a href="https://orgmode.org">org mode</a>. I love org mode that much, but
      of course there are downsides. For example, while they are easy to access
      on my mac, if I want to view them on my iPhone, I have to jump through a
      bunch of hoops. And this is not the only obstacle I have to overcome. If I
      want to share my notes with my friends, good luck to me.
    </p>
<p>
      This would be my life if they weren't a handy program called
      <a href="https://pandoc.org/">pandoc</a>. With pandoc, I can convert my
      documents into great-looking, properly edited word and html documents. For
      example, the blog post you are reading right now is completely written in
      org mode and converted with pandoc. Let's see how I achieve this workflow.
    </p>
<h1 id="setting-metadata">1. Setting Metadata</h1>
<p>
      While it isn't always necessary, setting metadata is important for bunch
      of reasons like searchability and giving the general idea about the
      document. For example, here is the basic metadata for this document.
    </p>
<div class="sourceCode" id="cb1">
<pre class="sourceCode org"><code class="sourceCode orgmode"><span id="cb1-1"><a aria-hidden="true" href="#cb1-1" tabindex="-1"></a><span class="pp">#+TITLE: My Org+Pandoc Workflow</span></span>
<span id="cb1-2"><a aria-hidden="true" href="#cb1-2" tabindex="-1"></a><span class="pp">#+AUTHOR: ƒ∞smail Efe Top</span></span>
<span id="cb1-3"><a aria-hidden="true" href="#cb1-3" tabindex="-1"></a><span class="pp">#+DATE: 2024-03-29</span></span>
<span id="cb1-4"><a aria-hidden="true" href="#cb1-4" tabindex="-1"></a><span class="pp">#+LANGUAGE: en</span></span>
<span id="cb1-5"><a aria-hidden="true" href="#cb1-5" tabindex="-1"></a><span class="pp">#+DESCRIPTION: How I use pandoc to transform my org documents to beautiful looking word documents and websites!</span></span></code></pre>
</div>
<h1 id="pandoc-configuration-for-word-documents">
      2. Pandoc Configuration for Word Documents
    </h1>
<p>
      Normally, turning a org document into a word document is easy if you have
      the
      <a href="http://joostkremers.github.io/pandoc-mode/">pandoc package</a>.
      But I use a thing called reference template. In this use-case, I have a
      document called
      <a href="https://ismailefe.org/blog/my_org_pandoc_workflow/etc/custom-reference.docx">custom-reference.docx</a>. This documents has all the changes I made to the default font-size,
      heading fonts, colors etc. When I tell pandoc to use that document as a
      reference. It turns my org documents into the perfect docx file. Figuring
      out how to use and automate this took a really long time but I am really
      glad I done the necessary work.
    </p>
<p>
      I use this automation everyday to turn my notes into a docx file and then
      a pdf. It is really useful when I want to summit a homework or share my
      class notes with a friend.
    </p>
<p>
      I use a function to achieve this, here is what you have to do to use my
      function.
    </p>
<h2 id="prepare-a-reference-docx-file">Prepare a reference docx file</h2>
<p>
      You can
      <a href="https://ismailefe.org/blog/my_org_pandoc_workflow/etc/custom-reference.docx">download mine</a>
      and change it however you like. Put it in somewhere safe and note the
      file-path.
    </p>
<h2 id="install-pandoc-the-pandoc-mode-package-and-the-ox-pandoc-package">
      Install Pandoc, the pandoc-mode package and the ox-pandoc package
    </h2>
<p>
      For pandoc, you can use <a href="https://brew.sh">homebrew</a> or any
      other package manager.
    </p>
<p>
      For pandoc-mode, you can install the package with
      <a href="https://melpa.org/">melpa</a> and read more
      <a href="http://joostkremers.github.io/pandoc-mode/">here</a>.
    </p>
<p>
      For ox-pandoc, you can install the package with melpa and read more
      <a href="https://github.com/kawabata/ox-pandoc">here</a>.
    </p>
<h2 id="set-the-pandoc-binary-location">Set the pandoc binary location</h2>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb2">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb2-1"><a aria-hidden="true" href="#cb2-1" tabindex="-1"></a><span class="co">;; put this on your init.el or config.el</span></span>
<span id="cb2-2"><a aria-hidden="true" href="#cb2-2" tabindex="-1"></a>(<span class="kw">setq</span> pandoc-binary <span class="st">"/opt/homebrew/bin/pandoc"</span>)</span></code></pre>
</div>
<p>
      I installed pandoc with homebrew, if you don't know where your pandoc
      binary is located you can run 'whereis pandoc' in your terminal.
    </p>
<h2 id="set-the-data-directory-for-pandoc">
      Set the data directory for pandoc
    </h2>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb3">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb3-1"><a aria-hidden="true" href="#cb3-1" tabindex="-1"></a><span class="co">;; put this on your init.el or config.el</span></span>
<span id="cb3-2"><a aria-hidden="true" href="#cb3-2" tabindex="-1"></a>(<span class="kw">setq</span> pandoc-data-dir <span class="st">"/Users/example_user/.config/doom/etc/pandoc/"</span>)</span></code></pre>
</div>
<p>You can set this directory to wherever you like.</p>
<h2 id="prepare-a-docx.pandoc-configuration-file">
      Prepare a docx.pandoc configuration file
    </h2>
<p>This file goes into your pandoc data directory.</p>
<p>
      It is really important to use a proper configuration file, this file is
      what makes pandoc recognize the reference docx document.
    </p>
<p>
      As an example or a starting point, you can download my docx.pandoc file
      <a href="https://ismailefe.org/blog/my_org_pandoc_workflow/etc/docx.pandoc">here</a>. Don't forget to change the path of the reference docx file
      (reference-doc) to the one you noted at the beginning.
    </p>
<h2 id="custom-function">Custom Function</h2>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb4">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb4-1"><a aria-hidden="true" href="#cb4-1" tabindex="-1"></a><span class="co">;; put this on your init.el or config.el</span></span>
<span id="cb4-2"><a aria-hidden="true" href="#cb4-2" tabindex="-1"></a>(<span class="kw">defun</span><span class="fu"> efe/export-to-docx </span>()</span>
<span id="cb4-3"><a aria-hidden="true" href="#cb4-3" tabindex="-1"></a>  <span class="st">"Output to docx using pandoc-mode"</span></span>
<span id="cb4-4"><a aria-hidden="true" href="#cb4-4" tabindex="-1"></a>  (interactive)</span>
<span id="cb4-5"><a aria-hidden="true" href="#cb4-5" tabindex="-1"></a>  (pandoc-mode)</span>
<span id="cb4-6"><a aria-hidden="true" href="#cb4-6" tabindex="-1"></a>  (execute-kbd-macro (kbd <span class="st">"C-c / O W d b b r"</span>))</span>
<span id="cb4-7"><a aria-hidden="true" href="#cb4-7" tabindex="-1"></a>  (<span class="kw">setq</span> pandoc-mode <span class="kw">nil</span>)</span>
<span id="cb4-8"><a aria-hidden="true" href="#cb4-8" tabindex="-1"></a>  )</span></code></pre>
</div>
<p>
      When you run this function, it creates a docx file with the same name as
      your original file.
    </p>
<h1 id="turn-org-documents-into-beautiful-sites">
      3. Turn Org Documents into Beautiful Sites
    </h1>
<p>
      Here is how I turn my org documents into blog posts. Firstly, before
      exporting my org documents I run a function that adds the necessary html
      heads and bottom headers.
    </p>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb5">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb5-1"><a aria-hidden="true" href="#cb5-1" tabindex="-1"></a><span class="co">;; put this on your init.el or config.el</span></span>
<span id="cb5-2"><a aria-hidden="true" href="#cb5-2" tabindex="-1"></a>(<span class="kw">defun</span><span class="fu"> insert-html-blog-template </span>()</span>
<span id="cb5-3"><a aria-hidden="true" href="#cb5-3" tabindex="-1"></a>  <span class="st">"Inserts HTML_HEAD lines at the first empty line and html code at the end of the buffer."</span></span>
<span id="cb5-4"><a aria-hidden="true" href="#cb5-4" tabindex="-1"></a>  (interactive)</span>
<span id="cb5-5"><a aria-hidden="true" href="#cb5-5" tabindex="-1"></a>  (save-excursion</span>
<span id="cb5-6"><a aria-hidden="true" href="#cb5-6" tabindex="-1"></a>    (goto-char (point-min))</span>
<span id="cb5-7"><a aria-hidden="true" href="#cb5-7" tabindex="-1"></a>    (<span class="kw">let</span> ((empty-line (<span class="kw">progn</span> (re-search-forward <span class="st">"^$"</span> <span class="kw">nil</span> <span class="kw">t</span>) (point))))</span>
<span id="cb5-8"><a aria-hidden="true" href="#cb5-8" tabindex="-1"></a>      (goto-char empty-line)</span>
<span id="cb5-9"><a aria-hidden="true" href="#cb5-9" tabindex="-1"></a>      (insert <span class="st">"</span><span class="sc">\n</span><span class="st">#+HTML_HEAD: &lt;link rel=</span><span class="sc">\"</span><span class="st">webmention</span><span class="sc">\"</span><span class="st"> href=</span><span class="sc">\"</span><span class="st">https://webmention.io/ismailefe.org/webmention</span><span class="sc">\"</span><span class="st"> /&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-10"><a aria-hidden="true" href="#cb5-10" tabindex="-1"></a>      (insert <span class="st">"#+HTML_HEAD: &lt;link rel=</span><span class="sc">\"</span><span class="st">stylesheet</span><span class="sc">\"</span><span class="st"> type=</span><span class="sc">\"</span><span class="st">text/css</span><span class="sc">\"</span><span class="st"> href=</span><span class="sc">\"</span><span class="st">/templates/style.css</span><span class="sc">\"</span><span class="st"> /&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-11"><a aria-hidden="true" href="#cb5-11" tabindex="-1"></a>      (insert <span class="st">"#+HTML_HEAD: &lt;link rel=</span><span class="sc">\"</span><span class="st">apple-touch-icon</span><span class="sc">\"</span><span class="st"> sizes=</span><span class="sc">\"</span><span class="st">180x180</span><span class="sc">\"</span><span class="st"> href=</span><span class="sc">\"</span><span class="st">/favicon/apple-touch-icon.png</span><span class="sc">\"</span><span class="st">&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-12"><a aria-hidden="true" href="#cb5-12" tabindex="-1"></a>      (insert <span class="st">"#+HTML_HEAD: &lt;link rel=</span><span class="sc">\"</span><span class="st">icon</span><span class="sc">\"</span><span class="st"> type=</span><span class="sc">\"</span><span class="st">image/png</span><span class="sc">\"</span><span class="st"> sizes=</span><span class="sc">\"</span><span class="st">32x32</span><span class="sc">\"</span><span class="st"> href=</span><span class="sc">\"</span><span class="st">/favicon/favicon-32x32.png</span><span class="sc">\"</span><span class="st">&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-13"><a aria-hidden="true" href="#cb5-13" tabindex="-1"></a>      (insert <span class="st">"#+HTML_HEAD: &lt;link rel=</span><span class="sc">\"</span><span class="st">icon</span><span class="sc">\"</span><span class="st"> type=</span><span class="sc">\"</span><span class="st">image/png</span><span class="sc">\"</span><span class="st"> sizes=</span><span class="sc">\"</span><span class="st">16x16</span><span class="sc">\"</span><span class="st"> href=</span><span class="sc">\"</span><span class="st">/favicon/favicon-16x16.png</span><span class="sc">\"</span><span class="st">&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-14"><a aria-hidden="true" href="#cb5-14" tabindex="-1"></a>      (insert <span class="st">"#+HTML_HEAD: &lt;link rel=</span><span class="sc">\"</span><span class="st">manifest</span><span class="sc">\"</span><span class="st"> href=</span><span class="sc">\"</span><span class="st">/favicon/site.webmanifest</span><span class="sc">\"</span><span class="st">&gt;</span><span class="sc">\n</span><span class="st">"</span>)))</span>
<span id="cb5-15"><a aria-hidden="true" href="#cb5-15" tabindex="-1"></a>  (goto-char (point-max))</span>
<span id="cb5-16"><a aria-hidden="true" href="#cb5-16" tabindex="-1"></a>  (insert <span class="st">"</span><span class="sc">\n\n</span><span class="st">"</span>)</span>
<span id="cb5-17"><a aria-hidden="true" href="#cb5-17" tabindex="-1"></a>  (insert <span class="st">"#+BEGIN_EXPORT html</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-18"><a aria-hidden="true" href="#cb5-18" tabindex="-1"></a>  (insert <span class="st">"&lt;div class=</span><span class="sc">\"</span><span class="st">bottom-header</span><span class="sc">\"</span><span class="st">&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-19"><a aria-hidden="true" href="#cb5-19" tabindex="-1"></a>  (insert <span class="st">"  &lt;a class=</span><span class="sc">\"</span><span class="st">bottom-header-link</span><span class="sc">\"</span><span class="st"> href=</span><span class="sc">\"</span><span class="st">/</span><span class="sc">\"</span><span class="st">&gt;Home&lt;/a&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-20"><a aria-hidden="true" href="#cb5-20" tabindex="-1"></a>  (insert <span class="st">"  &lt;a href=</span><span class="sc">\"</span><span class="st">mailto:ismailefetop@gmail.com</span><span class="sc">\"</span><span class="st"> class=</span><span class="sc">\"</span><span class="st">bottom-header-link</span><span class="sc">\"</span><span class="st">&gt;Mail Me&lt;/a&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-21"><a aria-hidden="true" href="#cb5-21" tabindex="-1"></a>  (insert <span class="st">"  &lt;a class=</span><span class="sc">\"</span><span class="st">bottom-header-link</span><span class="sc">\"</span><span class="st"> href=</span><span class="sc">\"</span><span class="st">/feed.xml</span><span class="sc">\"</span><span class="st"> target=</span><span class="sc">\"</span><span class="st">_blank</span><span class="sc">\"</span><span class="st">&gt;RSS&lt;/a&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-22"><a aria-hidden="true" href="#cb5-22" tabindex="-1"></a>  (insert <span class="st">"  &lt;a class=</span><span class="sc">\"</span><span class="st">bottom-header-link</span><span class="sc">\"</span><span class="st"> href=</span><span class="sc">\"</span><span class="st">https://github.com/Ektaynot/ismailefe_org</span><span class="sc">\"</span><span class="st"> target=</span><span class="sc">\"</span><span class="st">_blank</span><span class="sc">\"</span><span class="st">&gt;Source&lt;/a&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-23"><a aria-hidden="true" href="#cb5-23" tabindex="-1"></a>  (insert <span class="st">"&lt;/div&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-24"><a aria-hidden="true" href="#cb5-24" tabindex="-1"></a>  (insert <span class="st">"&lt;div class=</span><span class="sc">\"</span><span class="st">firechickenwebring</span><span class="sc">\"</span><span class="st">&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-25"><a aria-hidden="true" href="#cb5-25" tabindex="-1"></a>  (insert <span class="st">"  &lt;a href=</span><span class="sc">\"</span><span class="st">https://firechicken.club/efe/prev</span><span class="sc">\"</span><span class="st">&gt;‚Üê&lt;/a&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-26"><a aria-hidden="true" href="#cb5-26" tabindex="-1"></a>  (insert <span class="st">"  &lt;a href=</span><span class="sc">\"</span><span class="st">https://firechicken.club</span><span class="sc">\"</span><span class="st">&gt;üî•‚Å†üêì&lt;/a&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-27"><a aria-hidden="true" href="#cb5-27" tabindex="-1"></a>  (insert <span class="st">"  &lt;a href=</span><span class="sc">\"</span><span class="st">https://firechicken.club/efe/next</span><span class="sc">\"</span><span class="st">&gt;‚Üí&lt;/a&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-28"><a aria-hidden="true" href="#cb5-28" tabindex="-1"></a>  (insert <span class="st">"&lt;/div&gt;</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb5-29"><a aria-hidden="true" href="#cb5-29" tabindex="-1"></a>  (insert <span class="st">"#+END_EXPORT</span><span class="sc">\n</span><span class="st">"</span>))</span></code></pre>
</div>
<p>
      This function adds this on the top of the document (you can find my
      stylesheet <a href="https://ismailefe.org/templates/style.css">here</a>)
    </p>
<div class="sourceCode" id="cb6">
<pre class="sourceCode html"><code class="sourceCode html"><span id="cb6-1"><a aria-hidden="true" href="#cb6-1" tabindex="-1"></a>#+HTML_HEAD: <span class="dt">&lt;</span><span class="kw">link</span><span class="ot"> rel</span><span class="op">=</span><span class="st">"webmention"</span><span class="ot"> href</span><span class="op">=</span><span class="st">"https://webmention.io/ismailefe.org/webmention"</span><span class="ot"> </span><span class="dt">/&gt;</span></span>
<span id="cb6-2"><a aria-hidden="true" href="#cb6-2" tabindex="-1"></a>#+HTML_HEAD: <span class="dt">&lt;</span><span class="kw">link</span><span class="ot"> rel</span><span class="op">=</span><span class="st">"stylesheet"</span><span class="ot"> type</span><span class="op">=</span><span class="st">"text/css"</span><span class="ot"> href</span><span class="op">=</span><span class="st">"/templates/style.css"</span><span class="ot"> </span><span class="dt">/&gt;</span></span>
<span id="cb6-3"><a aria-hidden="true" href="#cb6-3" tabindex="-1"></a>#+HTML_HEAD: <span class="dt">&lt;</span><span class="kw">link</span><span class="ot"> rel</span><span class="op">=</span><span class="st">"apple-touch-icon"</span><span class="ot"> sizes</span><span class="op">=</span><span class="st">"180x180"</span><span class="ot"> href</span><span class="op">=</span><span class="st">"/favicon/apple-touch-icon.png"</span><span class="dt">&gt;</span></span>
<span id="cb6-4"><a aria-hidden="true" href="#cb6-4" tabindex="-1"></a>#+HTML_HEAD: <span class="dt">&lt;</span><span class="kw">link</span><span class="ot"> rel</span><span class="op">=</span><span class="st">"icon"</span><span class="ot"> type</span><span class="op">=</span><span class="st">"image/png"</span><span class="ot"> sizes</span><span class="op">=</span><span class="st">"32x32"</span><span class="ot"> href</span><span class="op">=</span><span class="st">"/favicon/favicon-32x32.png"</span><span class="dt">&gt;</span></span>
<span id="cb6-5"><a aria-hidden="true" href="#cb6-5" tabindex="-1"></a>#+HTML_HEAD: <span class="dt">&lt;</span><span class="kw">link</span><span class="ot"> rel</span><span class="op">=</span><span class="st">"icon"</span><span class="ot"> type</span><span class="op">=</span><span class="st">"image/png"</span><span class="ot"> sizes</span><span class="op">=</span><span class="st">"16x16"</span><span class="ot"> href</span><span class="op">=</span><span class="st">"/favicon/favicon-16x16.png"</span><span class="dt">&gt;</span></span>
<span id="cb6-6"><a aria-hidden="true" href="#cb6-6" tabindex="-1"></a>#+HTML_HEAD: <span class="dt">&lt;</span><span class="kw">link</span><span class="ot"> rel</span><span class="op">=</span><span class="st">"manifest"</span><span class="ot"> href</span><span class="op">=</span><span class="st">"/favicon/site.webmanifest"</span><span class="dt">&gt;</span></span></code></pre>
</div>
<p>And adds this on the end of the document</p>
<div class="sourceCode" id="cb7">
<pre class="sourceCode html"><code class="sourceCode html"><span id="cb7-1"><a aria-hidden="true" href="#cb7-1" tabindex="-1"></a><span class="dt">&lt;</span><span class="kw">div</span><span class="ot"> class</span><span class="op">=</span><span class="st">"bottom-header"</span><span class="dt">&gt;</span></span>
<span id="cb7-2"><a aria-hidden="true" href="#cb7-2" tabindex="-1"></a>  <span class="dt">&lt;</span><span class="kw">a</span><span class="ot"> class</span><span class="op">=</span><span class="st">"bottom-header-link"</span><span class="ot"> href</span><span class="op">=</span><span class="st">"/"</span><span class="dt">&gt;</span>Home<span class="dt">&lt;/</span><span class="kw">a</span><span class="dt">&gt;</span></span>
<span id="cb7-3"><a aria-hidden="true" href="#cb7-3" tabindex="-1"></a>  <span class="dt">&lt;</span><span class="kw">a</span><span class="ot"> href</span><span class="op">=</span><span class="st">"mailto:ismailefetop@gmail.com"</span><span class="ot"> class</span><span class="op">=</span><span class="st">"bottom-header-link"</span><span class="dt">&gt;</span>Mail Me<span class="dt">&lt;/</span><span class="kw">a</span><span class="dt">&gt;</span></span>
<span id="cb7-4"><a aria-hidden="true" href="#cb7-4" tabindex="-1"></a>  <span class="dt">&lt;</span><span class="kw">a</span><span class="ot"> class</span><span class="op">=</span><span class="st">"bottom-header-link"</span><span class="ot"> href</span><span class="op">=</span><span class="st">"/feed.xml"</span><span class="ot"> target</span><span class="op">=</span><span class="st">"_blank"</span><span class="dt">&gt;</span>RSS<span class="dt">&lt;/</span><span class="kw">a</span><span class="dt">&gt;</span></span>
<span id="cb7-5"><a aria-hidden="true" href="#cb7-5" tabindex="-1"></a>  <span class="dt">&lt;</span><span class="kw">a</span><span class="ot"> class</span><span class="op">=</span><span class="st">"bottom-header-link"</span><span class="ot"> href</span><span class="op">=</span><span class="st">"https://github.com/Ektaynot/ismailefe_org"</span><span class="ot"> target</span><span class="op">=</span><span class="st">"_blank"</span><span class="dt">&gt;</span>Source<span class="dt">&lt;/</span><span class="kw">a</span><span class="dt">&gt;</span></span>
<span id="cb7-6"><a aria-hidden="true" href="#cb7-6" tabindex="-1"></a><span class="dt">&lt;/</span><span class="kw">div</span><span class="dt">&gt;</span></span>
<span id="cb7-7"><a aria-hidden="true" href="#cb7-7" tabindex="-1"></a><span class="dt">&lt;</span><span class="kw">div</span><span class="ot"> class</span><span class="op">=</span><span class="st">"firechickenwebring"</span><span class="dt">&gt;</span></span>
<span id="cb7-8"><a aria-hidden="true" href="#cb7-8" tabindex="-1"></a>  <span class="dt">&lt;</span><span class="kw">a</span><span class="ot"> href</span><span class="op">=</span><span class="st">"https://firechicken.club/efe/prev"</span><span class="dt">&gt;</span>‚Üê<span class="dt">&lt;/</span><span class="kw">a</span><span class="dt">&gt;</span></span>
<span id="cb7-9"><a aria-hidden="true" href="#cb7-9" tabindex="-1"></a>  <span class="dt">&lt;</span><span class="kw">a</span><span class="ot"> href</span><span class="op">=</span><span class="st">"https://firechicken.club"</span><span class="dt">&gt;</span>üî•‚Å†üêì<span class="dt">&lt;/</span><span class="kw">a</span><span class="dt">&gt;</span></span>
<span id="cb7-10"><a aria-hidden="true" href="#cb7-10" tabindex="-1"></a>  <span class="dt">&lt;</span><span class="kw">a</span><span class="ot"> href</span><span class="op">=</span><span class="st">"https://firechicken.club/efe/next"</span><span class="dt">&gt;</span>‚Üí<span class="dt">&lt;/</span><span class="kw">a</span><span class="dt">&gt;</span></span>
<span id="cb7-11"><a aria-hidden="true" href="#cb7-11" tabindex="-1"></a><span class="dt">&lt;/</span><span class="kw">div</span><span class="dt">&gt;</span></span></code></pre>
</div>
<p>
      With these snippets added, all I have to do is run the
      'org-pandoc-export-to-html5' function in Emacs (this function comes with
      ox-pandoc). This creates a html file with the same name as the original
      file.
    </p>
<h1 id="conclusion">Conclusion</h1>
<p>
      As you see, pandoc is a must for me when using org mode. While I invested
      a great time to learn these tools, they more than paid for themselves. I
      recommend everyone to follow a similiar path.
    </p>
<p>If you have questions or feedback, feel free to email me!</p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/my_org_pandoc_workflow/index.html</link>
  <guid>https://ismailefe.org/blog/my_org_pandoc_workflow/index.html</guid>
  <pubDate>Fri, 29 Mar 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>Arc and Firefox</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">Arc and Firefox</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-03-24</p>
</header>
<p>
      I started using Firefox in 2015, I installed it because the logo looked
      really cool. Of course, my reasoning did not stayed the same. A few years
      later, I became really interested in open-source software and migrated to
      Linux. In Linux, there are not many viable browser options if you want
      something open-source. The best option at the time was Firefox, so I kept
      using it.
    </p>
<p>
      I installed a bunch of
      <a href="https://firefoxcss-store.github.io/">css themes</a> and a ton of
      unnecessary extensions. I had a system that worked. I kept moving my
      Firefox profiles throughout my Linux journey. Then, one last time to
      macOS.
    </p>
<p>
      I got my MacBook two years ago. Before than, I had never used any Apple
      products. While it was similar to Linux in some aspects, it also felt
      alien. When I installed Firefox and migrated my profiles, I encountered a
      bunch of problems with zero solutions. That's when I started looking at
      other alternatives. The first browser I wanted to try was Safari because
      I've heard so many people talking about how Apple's own apps were the best
      ones to use.
    </p>
<p>
      Safari did not stick with me, it was really hard to customize and
      installing extensions were unfathomably hard. The only good part was how
      fast it was. But in the end, I decided to stick with Firefox. I had solved
      a big portion of my problems and came to peace with the ones I wasn't able
      to solve.
    </p>
<p>
      Then, on March 7th 2023, I watched my first
      <a href="https://youtu.be/p_5QSsNpWmE?si=-utipZg-TBwPl3zw">video</a> about
      the <a href="https://arc.net/">Arc Browser</a>. The video was a clip from
      the Waveform podcast, they were talking about the products they loved and
      one of them talked about the Arc Browser. This made me curious and I
      decided to do some research. It was apparently a browser made by a small
      team in New York. Then, thanks to my school being an accepted campus in
      Arc, I was able to join the beta and install Arc.
    </p>
<p>
      If I had to describe my first impressions in one word, it would be
      <strong>young</strong>. But not in a bad way. Yes, Arc was slow and there
      was a ton of missing features but using it felt like a new experience. It
      was colorful and unapologetically playful.
    </p>
<p>
      It become my default browser really fast. While sometimes I missed using
      Firefox, the excitement of using Arc made me not want to go back. There
      were new updates every week and frequent in-house Youtube videos. They
      also added a bunch of cool stuff like
      <a href="https://arc.net/boosts">boosts</a> and using different sites as
      search engines.
    </p>
<p>
      Everything was going great until the
      <a href="https://youtu.be/WIeJF3kL5ng?si=E2k23oKW3oqVWa7Z">act II of Arc</a>
      came. They introduced a 'new way to browse'. You would type what you
      wanted and an AI would visit different sites and compile a web page for
      you. Their motto was don't bother to search the internet; let us search it
      for you. Watching that made me worry about the Arc's future. Were they
      trying to make everything AI? Then, I thought about how Arc was going to
      profit. How were they able to get a ton of funding without taking any
      steps to make profit? Then, the popular phrase came to my mind, "If you
      aren't paying for the product, you are the product". While the thought of
      leaving stayed in my mind, I kept using Arc for a while. The final straw
      was when I saw that they got millions of dollars in funding again and
      added more AI stuff as a result, it was time to leave.
    </p>
<p>
      I decided to return to my old friend Firefox. I opened it, removed my old
      profiles and themes, and started clean.
    </p>
<p>
      The first thing I noticed was how fast Firefox was compared to Arc. I had
      became so used to the slowness of Arc that I got really surprised when I
      switched back. With the excitement of returning to my roots, I began
      searching for good extensions. Some extensions may really slow down your
      system and introduce security vulnerabilities. So I tried to be minimal as
      possible.
    </p>
<ul>
<li>
<a href="https://www.zotero.org/download/connectors">Zotero Connector</a>
        for saving important articles to Zotero
      </li>
<li>
<a href="https://addons.mozilla.org/en-US/firefox/addon/vimium-ff/">Vimium</a>
        for having vim controls on websites
      </li>
<li>
<a href="https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/">uBlock Origin</a>
        for blocking ads and cookies warnings
      </li>
<li>
<a href="https://addons.mozilla.org/tr/firefox/addon/cliget/">cliget</a>
        for having the option to install stuff on the command line via aria2c
      </li>
</ul>
<h1 id="conclusion">Conclusion</h1>
<p>
      I love fun software but hate capitalism. A company that
      <strong>currently</strong> has no way to profit, getting hundreds of
      millions of dollars in funding doesn't make any sense. Also, them pushing
      AI so much makes me much more suspicious.
    </p>
<p>
      While it has been a fun ride with Arc, I am glad to be back on Firefox.
    </p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/arc_and_firefox/index.html</link>
  <guid>https://ismailefe.org/blog/arc_and_firefox/index.html</guid>
  <pubDate>Sun, 24 Mar 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>Org, AWK, and Anki</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">Org, AWK, and Anki</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-03-17</p>
</header>
<p>
<strong>Disclaimer: This blog post requires you to know what org-mode, Anki,
        and AWK are.</strong>
</p>
<p>
      I use org-mode a lot for taking notes in my classes. There are not many
      classes that introduce a lot of new terms. But this semester, we are
      taking a class called 'introduction to literature' and as you can imagine
      there are tons of new terms.
    </p>
<p>
      My memory is not that good and I need to do a lot of practice to memorize.
      So, a flash card software like
      <a href="https://apps.ankiweb.net/">Anki</a> comes handy.
    </p>
<p>
      My problem is that I don't know how I can turn my org notes into Anki
      flash cards.
    </p>
<h1 id="what-i-want">What I Want</h1>
<p>
      When I have a class that introduce lots of terms, I usually put a 'terms'
      heading on the beginning of my file. When we are introduced to a new term,
      I put that there.
    </p>
<p>My org class notes look something like this:</p>
<img alt="The image of my org class note, written in org-mode." src="/blog/org-awk-anki/pics/emacs_org.webp"/>
<p>
      I need this system to also work for Anki. So, after a bit of thought, I
      decided I want something that can turn lines containing terms into Anki
      flash cards.
    </p>
<p><em>Let's search for solutions‚Ä¶</em></p>
<h1 id="first-solution-search-google">First Solution: Search Google</h1>
<p>
      I found two projects that try to connect org-mode and Anki. These were
      <a href="https://github.com/louietan/anki-editor">anki-editor</a> and
      <a href="https://github.com/eyeinsky/org-anki">org-anki</a>. But after
      looking into them a bit more, I found that they have their own way of
      working and wouldn't be great for my basic use-case.
    </p>
<p>
      But if they interest you, I found a great
      <a href="https://yiufung.net/post/anki-org/">blog post</a> talking about
      them.
    </p>
<h1 id="second-solution-make-your-own">Second Solution: Make Your Own</h1>
<p>
      Because I don't need anything complex, I think I can do something on my
      own. I know that Anki supports basic csv files. So, let's go with that.
    </p>
<p>
      Because I only need a term and a meaning, a csv file with two columns
      should be sufficient. First column should be the name of the term and the
      second should be what that term means. So, the resulting file should look
      something like this:
    </p>
<pre class="csv"><code>term_name;term_meaning
term_name;term_meaning
term_name;term_meaning
term_name;term_meaning
</code></pre>
<p>
      To turn my above org class note into a csv file that looks like that, I
      need to do a few things.
    </p>
<ul>
<li>I need to find lines that contain bullet points ('+' or '-')</li>
<li>I need to clean those bullet points</li>
<li>And lastly, I need to replace ': ' with ';'</li>
</ul>
<p>In plain-text, my org class note looks like this:</p>
<img alt="The image of my org class note, written in org-mode and turned into a plain text file." src="/blog/org-awk-anki/pics/emacs_plain.webp"/>
<p>Now that we have everything we need, let's get to work.</p>
<p>
      I normally would use python for this but I thought AWK would work better.
      I would strongly recommend that you watch
      <a href="https://www.youtube.com/watch?v=FbSpuZVb164">this video</a> to
      learn more. Let's start writing an AWK script to turn org files into csv
      files. We will start with‚Ä¶
    </p>
<ul>
<li>
        'BEGIN { FS=": " }': This sets the field separator as ': ', that means
        that AWK will split the lines according to the field separator. For
        example, '- term: term meaning' will be '- term' and 'term meaning'.
      </li>
</ul>
<ul>
<li>
        '/^[[:space:]]*[-+]/ &amp;&amp; index($0, ": ")': The first part is a condition
        to check if the line starts with zero or more whitespace's that follow
        with '+' or '-'. The index part checks if there is ': ' in the line
      </li>
</ul>
<ul>
<li>
        '{ sub(/[-+]/, "");': This removes the bullet point characters ('+' or
        '-').
      </li>
</ul>
<ul>
<li>
        'sub(/^[[:space:]]+/, "")': This removes any whitespace in the beginning
        of the line.
      </li>
</ul>
<ul>
<li>
<p>'printf "%s;", $1': This prints the first field and adds ';'.</p>
</li>
<li><p>'print $2': This prints the second field.</p></li>
</ul>
<p>In the end, our command should look something like this.</p>
<div class="sourceCode" data-org-language="sh" id="cb2">
<pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a aria-hidden="true" href="#cb2-1" tabindex="-1"></a><span class="fu">awk</span> <span class="st">'BEGIN { FS=": " } /^[[:space:]]*[-+]/ &amp;&amp; index($0, ": ") { sub(/[-+]/, ""); sub(/^[[:space:]]+/, ""); printf "%s;", $1; print $2 }'</span></span></code></pre>
</div>
<p>When I feed my class file into this command, it spits out this:</p>
<pre class="csv"><code>Subject;What a text is about, usually short and general
Theme;What the text tells us about the subject. Goes more into the subject
End-stopped line;A metrical line containing a complete phrase or sentence, or a poetic line ending with punctuation
Run-on line (enjambment);When the end of the line is not marked by punctuation, and the sentence or clause carries on over into the next line
Personification;Talking about a non-human as a person
The poetic persona/speaker;The word writer isn't used in poems, instead poetic persona or speaker is used
Simile;Likening something to something else. For example, like a thunderbolt he falls
Sonnet;A fourteen-line poem
Quatrain;A stanza of four lines
Couplet;Two lines of poetry at the end of a sonnet, that have the same length and rhyme pattern
</code></pre>
<p>When I give this file to Anki, it creates all the needed flash cards.</p>
<h1 id="conclusion">Conclusion</h1>
<p>
      I am really happy with the outcome. I learned a lot about AWK and I now
      have a easy way to turn my org notes into Anki flash cards.
    </p>
<p>
      My AWK script could definitely use some polish. So, if you want to give me
      any tips, I will gladly take them.
    </p>
<br/><br/>
<p>
<strong>Edit:</strong>
<a href="https://www.reddit.com/user/cottasteel/">u/cottasteel</a> wrote
      my AWK command in elisp. It works great! Here is the code snippet:
    </p>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb4">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb4-1"><a aria-hidden="true" href="#cb4-1" tabindex="-1"></a>(<span class="kw">defun</span><span class="fu"> anki/export-notes-to-csv </span>(file)</span>
<span id="cb4-2"><a aria-hidden="true" href="#cb4-2" tabindex="-1"></a>  (interactive <span class="st">"FExport notes to: "</span>)</span>
<span id="cb4-3"><a aria-hidden="true" href="#cb4-3" tabindex="-1"></a>  (<span class="kw">let</span> ((regex (rx bol (in <span class="st">"+-"</span>) <span class="st">" "</span> (group (<span class="op">1+</span> nonl)) <span class="st">": "</span> (group (<span class="op">1+</span> nonl))))</span>
<span id="cb4-4"><a aria-hidden="true" href="#cb4-4" tabindex="-1"></a>        (buf (find-file-noselect file))</span>
<span id="cb4-5"><a aria-hidden="true" href="#cb4-5" tabindex="-1"></a>        (output <span class="st">""</span>))</span>
<span id="cb4-6"><a aria-hidden="true" href="#cb4-6" tabindex="-1"></a>    (save-excursion</span>
<span id="cb4-7"><a aria-hidden="true" href="#cb4-7" tabindex="-1"></a>      (goto-char (point-min))</span>
<span id="cb4-8"><a aria-hidden="true" href="#cb4-8" tabindex="-1"></a>      (while (re-search-forward regex <span class="kw">nil</span> <span class="kw">t</span>)</span>
<span id="cb4-9"><a aria-hidden="true" href="#cb4-9" tabindex="-1"></a>        (<span class="kw">setq</span> output (concat output (<span class="kw">format</span> <span class="st">"%s;%s</span><span class="sc">\n</span><span class="st">"</span> (match-string <span class="dv">1</span>)</span>
<span id="cb4-10"><a aria-hidden="true" href="#cb4-10" tabindex="-1"></a>                                            (match-string <span class="dv">2</span>)))))</span>
<span id="cb4-11"><a aria-hidden="true" href="#cb4-11" tabindex="-1"></a>      (with-current-buffer buf</span>
<span id="cb4-12"><a aria-hidden="true" href="#cb4-12" tabindex="-1"></a>        (erase-buffer)</span>
<span id="cb4-13"><a aria-hidden="true" href="#cb4-13" tabindex="-1"></a>        (insert output)</span>
<span id="cb4-14"><a aria-hidden="true" href="#cb4-14" tabindex="-1"></a>        (save-buffer))</span>
<span id="cb4-15"><a aria-hidden="true" href="#cb4-15" tabindex="-1"></a>      (kill-buffer buf)</span>
<span id="cb4-16"><a aria-hidden="true" href="#cb4-16" tabindex="-1"></a>      (message <span class="st">"Export done."</span>))))</span></code></pre>
</div>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/org-awk-anki/index.html</link>
  <guid>https://ismailefe.org/blog/org-awk-anki/index.html</guid>
  <pubDate>Sun, 17 Mar 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>The Story of My Rotring 500</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">The Story of My Rotring 500</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-03-10</p>
</header>
<br/><br/>
<img alt="Picture of my rotring 500" class="centered-image" src="/blog/rotring500/rotring.webp" style="width: 600px"/>
<br/><br/>
<p>
      I wasn't always a good student, classes didn't interest me until I started
      university. Before university, every school year would go the same. I
      would tell myself that I only had to pass my exams and tough it out until
      the summer vacation. Then the whole loop would start again. I would
      daydream during classes and study exams the night before. While I had a
      goal, studying computer science, I wouldn't work properly to achieve it.
    </p>
<p>
      Because I wanted to study computer science, I had chosen the math and
      science major. For context, in turkey, there are 4 different kinds of high
      school majors and we have to select a major in second semester of 10th
      grade. Every university major falls into one of these 4 high school majors
      and you have to take the proper exam according to the university major you
      want to study. These high school majors are‚Ä¶
    </p>
<ol>
<li>Math and science</li>
<li>Math and social sciences</li>
<li>Foreign Language</li>
<li>Turkish social sciences and literature</li>
</ol>
<p>
<em>While these might not be the correct translations, you get the
        point.</em>
</p>
<p>
      For example, if you want to study computer science you have to take the
      math and science exam or if you want to study economics you have to take
      the math and social sciences exam. <em>Now let's get to our story‚Ä¶</em>
</p>
<p>
      Even though I knew I hated the science part (chemistry, biology, and
      physics) of my major, I thought I would just stick with it for 2 years.
      And this made me hate my classes more. In my last year of high school, I
      started to sway to the foreign language section of the university exam
      because of my love for the English language.
      <em>Also the fact that I almost aced the language part of the university
        exam helped a lot.</em>
</p>
<p>
      While I was researching my options, I came across foreign language
      education at <a href="https://www.metu.edu.tr/">metu</a>. Ever since I was
      little, I admired people who studied there. In my mind metu was a
      university that only geniuses could go and I couldn't even imagine myself
      there. I thought I wasn't smart enough. While this opinion changed when I
      learned that I could get into it, metu always stayed my favorite
      university.
    </p>
<p>
      While my test scores at that moment wasn't enough to get me there, I knew
      I could get in if I studied enough. And that was my motivation. I wrote
      'METU' in large letters on a paper and taped it to my TV. I started
      sleeping at 9 pm and waking up at 5 am. This way I could study before
      school and get the necessary sleep. I bought tons of practice exams and I
      was ready. Except for one thing, <strong>a mechanical pencil</strong>.
    </p>
<p>
      The morning I started this routine my favorite pencil broke. I didn't
      think much of it, after all it was a cheap pencil. My plan was to go to
      the stationery store before school and get the same pencil. So, I got into
      the stationery, picked my regular pen and just before I was about to pay I
      saw something behind the counter. There was a mechanical pencil that cost
      ten times more. Out of curiosity, I asked if I could look at it. The man
      took the pencil out of the display case and started to look at it
      carefully, it was clear that he admired the pen too. Then he gave that pen
      to me, I was shocked. It felt light and well-made at the same time.
      Nothing like the pencils I held before, it was clear that it was a machine
      that was purposely built for writing. I started doing the math in my head,
      "If I use the money from my savings, I can buy it. But I tried so hard to
      save that money". Then a thought came to my mind, "The only way this
      purchase can be justifiable is if this pen gets me into metu". With
      determination, I bought the pen and put it in my pocket for safekeeping.
      That year, I solved thousands of questions and studied hundreds of hours
      with it. And in the end, this pen made me achieve my dreams.
    </p>
<p>
      I am currently studying my dream major and I am doing it with the people I
      cherish. While I have no use for a mechanical pencil now, I still carry it
      with me almost everywhere I go.
    </p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/rotring500/index.html</link>
  <guid>https://ismailefe.org/blog/rotring500/index.html</guid>
  <pubDate>Sun, 10 Mar 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>My Must Emacs Functions</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">My Must Emacs Functions</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-03-06</p>
</header>
<p>
      I love Emacs because the possibilities are endless. What makes it so
      capable is definitely
      <a href="https://en.wikipedia.org/wiki/Emacs_Lisp">Emacs Lisp</a>. Thanks
      to this language, countless functions have been created to meet the needs
      of us users.
    </p>
<p>
      As a student who uses Emacs everyday for writing, there are several and
      functions that I depend on. Here are some of them.
    </p>
<h1 id="view-echo-area-messages">view-echo-area-messages</h1>
<p>
      I remember when I first started configuring Emacs, I would get a lot of
      error messages. And the worst part would be that these message would fade
      after few seconds. I would try to take pictures of the error messages so
      that I could Google it.
    </p>
<p>
      One day I was having too many errors and decided to find a way to see
      those messages. That's when I came across 'view-echo-area-messages'.
    </p>
<p>
      This opens a <strong><strong>messages</strong></strong> buffer and shows a
      history of the things that was in your
      <a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Echo-Area.html">echo area</a>.
    </p>
<h1 id="describe-function-and-describe-variable">
      describe-function and describe-variable
    </h1>
<p>
      By no means is Emacs an undocumented text editor, but accessing
      documentation when you are a beginner can be hard. A lot of users are
      looking for information online and blaming the community when they can't
      find it.
    </p>
<p>
      Most of the time, documentation of the thing you are looking for is
      already inside of Emacs! If you are searching for a particular function or
      want to know what a function does, you can use the 'describe-function'
      command. And if you can't find what you are looking for you can always
      write your own function.
    </p>
<p>
      When you are writing a function that builds upon what Emacs already offers
      (this is the case most of the time!), you can use the 'describe-variable'
      command. This command tells you more about what that variable does and how
      you can use it. Both of these commands can also tell you their global and
      local states and much more.
    </p>
<h1 id="ispell">ispell</h1>
<p>
      I am definitely a fast writer, but not an accurate one. I always mess up
      words when I am writing my thoughts. So a good spellchecker is a must for
      me. A spellchecker should be fast, lightweight and customizable. So it
      shouldn't slow down my system when I am spellchecking and I should be able
      to add words to my dictionary easily. While I did spend some time using
      other spellcheckers I liked using ispell the most. It is built-in,
      lightning fast and easy to use. It is probably my most used command. I
      usually use 'ispell-word' for correcting words that I know are wrong. And
      use 'ispell' to correct all the words that I forgot to correct at the end
      of my writing.
    </p>
<p>I know ispell is even older than Emacs but it still works for me.</p>
<h1 id="org-insert-structure-template">org-insert-structure-template</h1>
<p>
      As the name suggests, this command inserts different templates to your
      file. I used this a lot when I was writing my
      <a href="https://en.wikipedia.org/wiki/Literate_programming">literate config</a>. With this command, you can insert code blocks, html export blocks,
      quote blocks and much more. It is easily customizable and definitely a
      time saver.
    </p>
<img alt="Image of an Emacs window with the command 'org-insert-structure-template running'" src="/blog/emacs_functions/img/insert.webp"/>
<h1 id="google-current-word">google-current-word</h1>
<p>
      Currently, I am taking an introduction to literature class and learning a
      lot of words that I didn't know before. I best learn using different
      sources, so my first step is almost always searching it on Google.
    </p>
<p>
      Whenever our instructor introduces a new term, I put it in my org file.
      Then when I want to write a definition for that word, I need Google to
      help me. So, I wanted a function that takes the current word my cursor is
      on and searches it on Google. I looked for a package to do that for me and
      <a href="https://github.com/Malabarba/emacs-google-this">there was one</a>. But sadly, it wouldn't work on my system. So, with the help of
      u/Aminumbra, I was able to create a function that does exactly what I
      want.
    </p>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb1">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb1-1"><a aria-hidden="true" href="#cb1-1" tabindex="-1"></a>(<span class="kw">defun</span><span class="fu"> google-current-word </span>()</span>
<span id="cb1-2"><a aria-hidden="true" href="#cb1-2" tabindex="-1"></a>  <span class="st">"Search the current word on Google using browse-url."</span></span>
<span id="cb1-3"><a aria-hidden="true" href="#cb1-3" tabindex="-1"></a>  (interactive)</span>
<span id="cb1-4"><a aria-hidden="true" href="#cb1-4" tabindex="-1"></a>  (<span class="kw">let</span> ((word (thing-at-point <span class="dt">'word</span>)))</span>
<span id="cb1-5"><a aria-hidden="true" href="#cb1-5" tabindex="-1"></a>    (<span class="kw">if</span> word</span>
<span id="cb1-6"><a aria-hidden="true" href="#cb1-6" tabindex="-1"></a>        (browse-url (concat <span class="st">"https://www.google.com/search?q="</span> word))</span>
<span id="cb1-7"><a aria-hidden="true" href="#cb1-7" tabindex="-1"></a>      (message <span class="st">"No word found at point."</span>))))</span></code></pre>
</div>
<h1 id="conclusion">Conclusion</h1>
<p>
      I hope you find some of my recommendation useful. These functions may be
      commonplace for some but I am sure that there are a lot of people who
      might benefit from these. If you have any critisims or advice, please
      reach me on
      <a href="mailto:ismailefetop@gmail.com">ismailefetop@gmail.com</a>
</p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/emacs_functions/index.html</link>
  <guid>https://ismailefe.org/blog/emacs_functions/index.html</guid>
  <pubDate>Wed, 06 Mar 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>Create Files That Last</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">Create Files That Last</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-03-03</p>
</header>
<p>
      As Steph Ango mentions in his
      <a href="https://stephango.com/file-over-app">article</a>, plain text
      files are more than files that have texts in them. They also symbolize a
      way of life. They make you face your technological habits, make you more
      aware of the stuff you create and encourage you to hold onto your
      creations.
    </p>
<h1 id="plain-text-files">Plain Text Files</h1>
<p>
      If you don't know what plain text files are, they are files that have
      human readable content in them.
    </p>
<p>
      I am sure that at some point we all have opened up a notepad software in
      our computers and written simple stuff that don't have any fancy headings,
      colors or pictures. These notes would then be saved as
      <strong>.txt</strong> files.
    </p>
<p>
      With the rise of note-taking apps such as
      <a href="https://www.notion.so/">notion</a> and simple to-do apps, the
      need for these <strong>.txt</strong> files diminished. Now we live in a
      world that produces a new multi-million dollar silicon valley company that
      makes a <em>ground-breaking</em> new note-taking app every month.
    </p>
<p>
      But was the diminishing of these simple <strong>.txt</strong> files good
      for us. <strong>Yes it was.</strong> This was of course a system that was
      doomed to fail. It is important that we color our notes, make big titles
      and add pictures. They make things more easy and joyful. But there was a
      great thing about these <strong>.txt</strong> files. They were simple and
      could be open everywhere. You didn't need an app that was 5 dollar every
      month and only available for iPhones.
    </p>
<p>
      Luckily we don't have to revive <strong>.txt</strong> files. We already
      have
      <a href="https://www.markdownguide.org/getting-started/#what-is-markdown">markdown</a>
      (<strong>.md</strong>) and
      <a href="https://orgmode.org/">org</a> (<strong>.org</strong>) files.
      While the latter is somewhat obscure, markdown is already used in a lot of
      places and have a thriving community.
    </p>
<h1 id="markdown">Markdown</h1>
<p>
      Markdown is a markup language that lets you add formatting elements to
      plain text files. Markdown can add stuff like; different levels of
      heading, bullet lists, to-do lists, hyperlinks, pictures and many more.
      And you can do these awesome things without ever needing a mouse. When you
      want to have a big title you can start your sentence with #, or if you
      want to make your text bold you can put '**' sign to the beginning and the
      end of your text. Let's do a little demo.
    </p>
<div class="sourceCode" id="cb1">
<pre class="sourceCode markdown"><code class="sourceCode markdown"><span id="cb1-1"><a aria-hidden="true" href="#cb1-1" tabindex="-1"></a><span class="fu"># Learning Markdown</span></span>
<span id="cb1-2"><a aria-hidden="true" href="#cb1-2" tabindex="-1"></a></span>
<span id="cb1-3"><a aria-hidden="true" href="#cb1-3" tabindex="-1"></a><span class="fu"># Level 1 Heading</span></span>
<span id="cb1-4"><a aria-hidden="true" href="#cb1-4" tabindex="-1"></a><span class="fu">## Level 2 Heading</span></span>
<span id="cb1-5"><a aria-hidden="true" href="#cb1-5" tabindex="-1"></a><span class="fu">### Level 3 Heading</span></span>
<span id="cb1-6"><a aria-hidden="true" href="#cb1-6" tabindex="-1"></a></span>
<span id="cb1-7"><a aria-hidden="true" href="#cb1-7" tabindex="-1"></a><span class="fu">## Text Formatting</span></span>
<span id="cb1-8"><a aria-hidden="true" href="#cb1-8" tabindex="-1"></a></span>
<span id="cb1-9"><a aria-hidden="true" href="#cb1-9" tabindex="-1"></a>**Bold Text**</span>
<span id="cb1-10"><a aria-hidden="true" href="#cb1-10" tabindex="-1"></a>*Italic Text*</span>
<span id="cb1-11"><a aria-hidden="true" href="#cb1-11" tabindex="-1"></a>~~Strikethrough Text~~</span>
<span id="cb1-12"><a aria-hidden="true" href="#cb1-12" tabindex="-1"></a></span>
<span id="cb1-13"><a aria-hidden="true" href="#cb1-13" tabindex="-1"></a><span class="fu">## Lists</span></span>
<span id="cb1-14"><a aria-hidden="true" href="#cb1-14" tabindex="-1"></a></span>
<span id="cb1-15"><a aria-hidden="true" href="#cb1-15" tabindex="-1"></a><span class="fu">### Ordered List</span></span>
<span id="cb1-16"><a aria-hidden="true" href="#cb1-16" tabindex="-1"></a><span class="ss">1. </span>Item 1</span>
<span id="cb1-17"><a aria-hidden="true" href="#cb1-17" tabindex="-1"></a><span class="ss">2. </span>Item 2</span>
<span id="cb1-18"><a aria-hidden="true" href="#cb1-18" tabindex="-1"></a><span class="ss">3. </span>Item 3</span>
<span id="cb1-19"><a aria-hidden="true" href="#cb1-19" tabindex="-1"></a></span>
<span id="cb1-20"><a aria-hidden="true" href="#cb1-20" tabindex="-1"></a><span class="fu">### Unordered List</span></span>
<span id="cb1-21"><a aria-hidden="true" href="#cb1-21" tabindex="-1"></a><span class="ss">- </span>Item A</span>
<span id="cb1-22"><a aria-hidden="true" href="#cb1-22" tabindex="-1"></a><span class="ss">- </span>Item B</span>
<span id="cb1-23"><a aria-hidden="true" href="#cb1-23" tabindex="-1"></a><span class="ss">- </span>Item C</span>
<span id="cb1-24"><a aria-hidden="true" href="#cb1-24" tabindex="-1"></a></span>
<span id="cb1-25"><a aria-hidden="true" href="#cb1-25" tabindex="-1"></a><span class="fu">### Todo List</span></span>
<span id="cb1-26"><a aria-hidden="true" href="#cb1-26" tabindex="-1"></a><span class="ss">- </span><span class="va">[ ]</span> Buy milk</span>
<span id="cb1-27"><a aria-hidden="true" href="#cb1-27" tabindex="-1"></a><span class="ss">- </span><span class="va">[x]</span> Write a post about plain text</span>
<span id="cb1-28"><a aria-hidden="true" href="#cb1-28" tabindex="-1"></a></span>
<span id="cb1-29"><a aria-hidden="true" href="#cb1-29" tabindex="-1"></a><span class="fu">### Links and Images</span></span>
<span id="cb1-30"><a aria-hidden="true" href="#cb1-30" tabindex="-1"></a></span>
<span id="cb1-31"><a aria-hidden="true" href="#cb1-31" tabindex="-1"></a><span class="co">[</span><span class="ot">Markdown Guide</span><span class="co">](https://www.markdownguide.org/)</span></span>
<span id="cb1-32"><a aria-hidden="true" href="#cb1-32" tabindex="-1"></a><span class="al">![Markdown Logo](https://markdown-here.com/img/icon256.png)</span></span>
<span id="cb1-33"><a aria-hidden="true" href="#cb1-33" tabindex="-1"></a></span>
<span id="cb1-34"><a aria-hidden="true" href="#cb1-34" tabindex="-1"></a><span class="fu">### Code</span></span>
<span id="cb1-35"><a aria-hidden="true" href="#cb1-35" tabindex="-1"></a></span>
<span id="cb1-36"><a aria-hidden="true" href="#cb1-36" tabindex="-1"></a>Also you can write code blocks with three backticks.</span>
<span id="cb1-37"><a aria-hidden="true" href="#cb1-37" tabindex="-1"></a></span>
<span id="cb1-38"><a aria-hidden="true" href="#cb1-38" tabindex="-1"></a><span class="in">```python</span></span>
<span id="cb1-39"><a aria-hidden="true" href="#cb1-39" tabindex="-1"></a><span class="kw">def</span> greet():</span>
<span id="cb1-40"><a aria-hidden="true" href="#cb1-40" tabindex="-1"></a>    <span class="bu">print</span>(<span class="st">"Hello, world!"</span>)</span></code></pre>
</div>
<p>
      When we view this code in a markdown supported editor like
      <a href="https://obsidian.org">obsidian</a>,
      <a href="https://bear.app">bear</a>,
      <a href="https://notable.app/">notable</a> or
      <a href="https://www.inkdrop.app/">inkdrop</a>. It looks something like
      this:
    </p>
<img alt="Output of the above markdown code block part 1 of 2" src="/blog/plain_text/pics/bear1.webp"/>
<img alt="Output of the above markdown code block part 2 of 2" src="/blog/plain_text/pics/bear2.webp"/>
<p>
      As you can see it is fundamentally not difficult. You just have to know
      the symbols that correspond to what you want. When you get used to
      markdown, you can write as fast as you can think with files that have
      proper formatting. For example if you are in a classroom or in a meeting.
      At the end, you can have a beautiful looking note file out of the box. The
      apps I mentioned above also support converting these markdown documents to
      all kinds of useful formats like PDFs, docs and HTMLs. For example, I am
      writing this blog post with org. While org works a little differently they
      are similar in a lot of areas. You can check out this
      <a href="https://orgmode.org/#org-demo">interactive org example</a>.
    </p>
<h1 id="why-bother">Why bother</h1>
<p>
      Apart from the convenience, this makes you more aware of what you create.
      Having little symbols on an application that you have no control over is
      not something you want if you want to preserve your legacy. While apps
      like notion might seem like a good option because of their ease of use.
      These apps will certainly someday fail. But if you use plain text files
      and apps that support it, when the app you are using dies, you can just
      take your stuff and move to a different app. And an app dying isn't the
      only reason. The company behind the app can turn it to a monthly service,
      remove functionality that you regularly use and, can make all sorts of bad
      decisions. That is one of the reasons why I love open-source so much, but
      of course that is another topic. Having your creations as files you own
      will surely benefit you a whole lot.
    </p>
<h1 id="recommendations">Recommendations</h1>
<p>
      I am going to give two starter packs. The first one will be for most of
      the people, the second one will be for the people who want to go into a
      rabbit hole and change the way they look at note taking.
    </p>
<h2 id="starter-pack">Starter pack</h2>
<ul>
<li>
<a href="https://www.markdownguide.org/getting-started/#what-is-markdown">Markdown</a>
        for the markup language
        <ul>
<li>Markdown is widely used and have a lot of guides for it</li>
<li>
            Is a little bit limited but allows a wide variety of use cases
          </li>
</ul>
</li>
<li>
<a href="https://obsidian.md/">Obsidian</a>
<ul>
<li>Works great for writing, note-taking, to-do lists</li>
<li>Open-source</li>
<li>Available in all major platforms</li>
<li>Syncs between these platforms</li>
<li>Great collection of community plugins</li>
</ul>
</li>
<li>
        If you are using an iPhone, you can use
        <a href="https://bear.app">bear</a> for short to-do lists or notes
      </li>
</ul>
<h2 id="advanced-pack">Advanced pack</h2>
<ul>
<li>
<a href="https://orgmode.org">Org</a> for the markup language
        <ul>
<li>Teaches you how to take logical notes</li>
<li>Nested headings</li>
<li>You can easily integrate meta-data</li>
<li>Works great with <a href="https://pandoc.org/">pandoc</a></li>
<li>Have native support for latex and live command blocks</li>
<li>Great for literate programming</li>
<li>Ability to use agenda and calendar with org-agenda</li>
<li>Native support for tags</li>
<li>
            Interconnected notes, better with
            <a href="https://www.orgroam.com/">org-roam</a>
</li>
<li>Fantastic way of managing tables</li>
<li>Great support for citation</li>
<li>
            Probably the only piece of software that have perfect defaults
          </li>
<li>Is a life-long journey that teaches you new things everyday</li>
<li>
            Is weirdly not limited by imagination, I always find stuff that I
            would never be able to think on my own.
          </li>
</ul>
</li>
<li>
<a href="https://www.gnu.org/software/emacs/">Emacs</a>
<ul>
<li>The best way to use org is in Emacs</li>
<li>Open-source</li>
<li>
            Works properly on computers only, while it is possible to run it on
            Android I wouldn't recommend it
          </li>
<li>
            Has endless customization options, check out this
            <a href="https://ismailefe.org/blog/eye_candy/">blog post</a>
</li>
</ul>
</li>
<li>
<a href="https://plainorg.com/">Plain-org</a> for iOS
        <ul>
<li>Looks native</li>
<li>
            While it lacks certain features it is still actively maintained
          </li>
<li>Best option for viewing and editing org files in iOS</li>
</ul>
</li>
<li><a href="https://orgro.org/">Orgro</a> for Android</li>
</ul>
<p>
      While I know started a rant when I mentioned org and Emacs but I assure
      you they are great if you have the proper free time, as it takes quite the
      time to get use to it. It took me around half a year to get to a place
      that I am comfortable in. But now I do 99% of my writing in Emacs and it
      saves me a lot of time. Learning Emacs and org was probably the best thing
      I have done for myself.
    </p>
<h1 id="to-conclude">To conclude</h1>
<p>
      Make sure you own your files, so that you can preserve your creations. Use
      apps that support plain text so you can jump ships easily. Definitely
      check out the starter pack. If you like what you see in the starter pack,
      forget everything you have learned and use the things in the advanced
      pack. And send me an <a href="mailto:ismailefetop@gmail.com">email</a> if
      you have any questions or recommendations.
    </p>
<h2 id="great-articles-on-the-subject">Great articles on the subject</h2>
<ul>
<li>
<a href="https://stephango.com/file-over-app">File over app</a> by Steph
        Ango (CEO of obsidian)
      </li>
<li>
<a href="https://jenson.org/files/">The future needs files</a> by Scott
        Jenson
      </li>
<li>
<a href="https://blog.jim-nielsen.com/2024/more-files-plz/">More files please</a>
        by Jim Nielsen
      </li>
</ul>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/plain_text/index.html</link>
  <guid>https://ismailefe.org/blog/plain_text/index.html</guid>
  <pubDate>Sun, 03 Mar 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>My EDC Essentials.</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">My EDC Essentials.</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-01-14</p>
</header>
<h1 id="what-is-edc">What is EDC?</h1>
<p>
      EDC stands for every day carry, encompassing everything from your wallet
      and phone to various types of screwdrivers can be included in the EDC
      category.
    </p>
<p>
      Even though everyone carries some stuff with them, there are people that
      take great pride in their EDC. We can find those people in
      <a href="https://www.reddit.com/r/EDC/">forums</a> and
      <a href="https://youtu.be/BQJyHHBkFPg?si=Xt-NkxlRHMklMiXL">youtube</a>
      videos. Those places can be a great starting point for people who want to
      give a little more effort to what they carry.
    </p>
<h1 id="my_edc">My EDC</h1>
<p>
      While mine might seem a little lacking and boring, it has been by far the
      most efficient setup for me.
    </p>
<p>
      I will mostly write about the interesting stuff and give only the bare
      minimum for the normal stuff.
    </p>
<h2 class="emoji" id="section">üì±</h2>
<p>
      I am using an iPhone, while the operating system is quite locked I love
      the polished iOS experience and the great ecosystem which I am a part of.
    </p>
<h2 class="emoji" id="section-1">üéß</h2>
<p>
      I am using the airpods pro 2nd gen. While expensive, they sound great and
      switching between my phone and my computer is stupid easy. Not having to
      deal with the unwanted small stuff and focusing on my creative projects is
      really important to me. Being in the apple ecosystem allows me to do that.
    </p>
<h2 class="emoji" id="section-2">‚åöÔ∏è</h2>
<p>
      I am using an old apple watch. I like tracking my sleep and exercises so
      that I can make adjustments. Also, seeing notifications without looking at
      my phone really comes in handy more than you might think.
    </p>
<h2 class="emoji" id="section-3">ü™™</h2>
<p>
      Like most people, I used a lot of different wallets. My biggest problem
      with my old wallets were they size. Because of my different circumstances
      I need to carry lots of cards and photos with me. For my old wallets to
      carry those different cards they needed to be really bulky. I wanted a
      slim option, so I found the
      <a href="https://www.amazon.com/Front-Pocket-Wallet-Zippers-Minimalist/dp/B0C77NS29R">OneTigris</a>. I can stuff a lot and not have to worry about them being lost. I carry
      the ones I frequently use in the front pockets. It really is the perfect
      wallet for me.
    </p>
<h2 class="emoji" id="section-4">üîë</h2>
<p>I carry the keys for my dormitory, nothing special.</p>
<h1 id="my-backpack">My Backpack</h1>
<p>
      I like to use different bags in my backpack. That way nothing is lost
      inside my bag. I have a computer case with a big zipper pocket, a travel
      pouch, and an umbrella.
    </p>
<h2 class="emoji" id="section-5">üéí</h2>
<p>
      My backpack is a mid-size Herschel Little America. Because I carry my
      backpack everywhere, it needs to be light and comfortable. This bag is
      just that. It has no fancy trick. Just a light and small backpack. It's
      the perfect size for carry it everyday.
    </p>
<h2 class="emoji" id="section-6">üíª</h2>
<p>
      This is probably the most important part of my life. I take notes for
      class, I program on it, I watch youtube. Basically most of my digital life
      is on here. I have a mba(2022) with 16 gigs of ram and 512 gigs of
      storage. I am coming from a linux laptop, It used to have 3 hours of
      battery use and the linux system would broke a couple of times a month.
      MacOS has the hackability of linux and it is crazy stable. I can easily
      say that this laptop suits my needs perfectly.
    </p>
<h2 class="emoji" id="section-7">üíº</h2>
<p>
      While the most important use-case of my computer case is protecting my
      computer, it also holds a lot of important accessory like:
    </p>
<ul>
<li>Logitech pebble</li>
<li>70W USB-C Power Adapter</li>
<li>One Magsafe Cable</li>
<li>One Lighting Cable</li>
<li>a Baseus Presentation Remote</li>
<li>a Generic Type-C Hub</li>
</ul>
<h2 class="emoji" id="section-8">üëù</h2>
<p>
      I also have a vintage travel pouch. On one side I have a usb power adapter
      and a 3 headed power cable and on the other I have a small notebook and
      different pens. On the outer shell I house different kinds of medicines.
    </p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/my_edc/index.html</link>
  <guid>https://ismailefe.org/blog/my_edc/index.html</guid>
  <pubDate>Sun, 14 Jan 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>My Emacs Eye Candy</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">My Emacs Eye Candy</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-01-14</p>
</header>
<p>
      First of all, this post is directly inspired by
      <a href="https://xenodium.com/my-emacs-eye-candy/">√Ålvaro's</a> work. I
      love his stuff and he has been a great inspiration for me. I suggest
      everyone to check out his stuff.
    </p>
<img alt="Image of my Emacs window" src="eye-candy.webp"/>
<p>
      In this post I am planning to walk you through my visual
      <a href="https://www.gnu.org/software/emacs/">Emacs</a> setup, I will use
      the <a href="https://github.com/doomemacs/doomemacs">Doom Framework</a>. I
      am planning on making a detail blog post about Emacs,
      <a href="https://orgmode.org/">org-mode</a> and how I use them, because of
      this I will not go into explanation of what Emacs is. There are great
      sources about Emacs and org-mode on youtube. Until I make that post, you
      can explore the Emacs world freely.
    </p>
<p><strong>Let's Start</strong></p>
<h1 id="install-brew">Installing Homebrew</h1>
<p>
      I will be using <a href="https://brew.sh/">Homebrew</a> to install Emacs
      and it's dependencies.
    </p>
<div class="sourceCode" data-org-language="sh" id="cb1">
<pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a aria-hidden="true" href="#cb1-1" tabindex="-1"></a><span class="ex">/bin/bash</span> <span class="at">-c</span> <span class="st">"</span><span class="va">$(</span><span class="ex">curl</span> <span class="at">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="va">)</span><span class="st">"</span></span></code></pre>
</div>
<h1 id="install-emacs">Installing Emacs</h1>
<p>
      I am choosing the default cask for Emacs. I tried several different forks
      of mac Emacs but all of them gave me poor performance on my m2 macbook.
    </p>
<div class="sourceCode" data-org-language="sh" id="cb2">
<pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a aria-hidden="true" href="#cb2-1" tabindex="-1"></a><span class="ex">brew</span> install <span class="at">--cask</span> emacs</span></code></pre>
</div>
<p>
<strong>After installing do not start Emacs.</strong> Starting Emacs will
      create a profile, which will conflict with your doom profile.
    </p>
<h1 id="install-doom">Installing Doom</h1>
<p>
      Doom is a stable framework for Emacs. You can considered like a base
      config file. It really makes Emacs usable out-of-box.
    </p>
<div class="sourceCode" data-org-language="sh" id="cb3">
<pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a aria-hidden="true" href="#cb3-1" tabindex="-1"></a><span class="fu">git</span> clone <span class="at">--depth</span> 1 https://github.com/doomemacs/doomemacs ~/.config/emacs</span>
<span id="cb3-2"><a aria-hidden="true" href="#cb3-2" tabindex="-1"></a><span class="ex">~/.config/emacs/bin/doom</span> install</span></code></pre>
</div>
<p>And now we are ready to hack our Emacs.</p>
<h1 id="changing-the-theme">Changing the theme</h1>
<p>
      I used to use the doom-dracula theme. But nowadays my favorite is the
      <a href="https://github.com/meritamen/emacs-kanagawa-theme">kanagawa theme</a>.
    </p>
<p>Add the below line to ~/.config/doom/package.el</p>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb4">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb4-1"><a aria-hidden="true" href="#cb4-1" tabindex="-1"></a>(package! kanagawa-theme)</span></code></pre>
</div>
<p>
      Then set your theme to kanagawa, for this put the below line in your
      config file ~/.config/doom/config.el
    </p>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb5">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb5-1"><a aria-hidden="true" href="#cb5-1" tabindex="-1"></a>(<span class="kw">setq</span> doom-theme <span class="dt">'kanagawa</span>)</span></code></pre>
</div>
<p>
<b>Note:</b> From now on all the code should go into your config file.
    </p>
<h1 id="changing-the-font">Changing the font</h1>
<p>
      I like using the
      <a href="https://www.jetbrains.com/lp/mono/">JetBrains Mono</a>.
    </p>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb6">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb6-1"><a aria-hidden="true" href="#cb6-1" tabindex="-1"></a>(<span class="kw">setq</span> doom-font (font-spec :family <span class="st">"JetBrains Mono"</span> :size <span class="dv">22</span>))</span></code></pre>
</div>
<h1 id="enable-word-count">Enabling Word Count</h1>
<p>This puts a word count in the modeline.</p>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb7">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb7-1"><a aria-hidden="true" href="#cb7-1" tabindex="-1"></a>(<span class="kw">setq</span> doom-modeline-enable-word-count <span class="kw">t</span>)</span></code></pre>
</div>
<h1 id="disable-hl-line-mode">Disabling hl-line-mode</h1>
<p>'hl-line' makes the current line a different color. I don't like it.</p>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb8">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb8-1"><a aria-hidden="true" href="#cb8-1" tabindex="-1"></a>(remove-hook <span class="dt">'doom-first-buffer-hook</span> <span class="op">#'</span>global-hl-line-mode)</span></code></pre>
</div>
<h1 id="the-title-bar">The title bar</h1>
<p>
      I like the look of an empty unified title-bar, so this removes the text.
      <strong>Only works for mac.</strong>
</p>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb9">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb9-1"><a aria-hidden="true" href="#cb9-1" tabindex="-1"></a>(<span class="kw">setq</span> ns-use-proxy-icon <span class="kw">nil</span>)</span>
<span id="cb9-2"><a aria-hidden="true" href="#cb9-2" tabindex="-1"></a>(<span class="kw">setq</span> frame-title-format <span class="kw">nil</span>)</span></code></pre>
</div>
<h1 id="remove-the-tilde-signs">Removing the tilde signs</h1>
<p>
      There is an ugly tilde sign on empty lines by default. I really don't like
      it. You can remove it by commenting out the 'vi-tilde-fringe' line in
      ~/.config/doom/init.el
    </p>
<h1 id="olivetti-mode">Olivetti Mode</h1>
<p>
      There is a melpa package called
      <a href="https://github.com/rnkn/olivetti">olivetti</a>. This package
      provides a good look for writing/reading by decreasing the width of the
      buffer.
    </p>
<p>
      You can install Olivetti by adding the below line to
      ~/.config/doom/package.el
    </p>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb10">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb10-1"><a aria-hidden="true" href="#cb10-1" tabindex="-1"></a>(package! olivetti)</span></code></pre>
</div>
<p>You can adjust the width like this</p>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb11">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb11-1"><a aria-hidden="true" href="#cb11-1" tabindex="-1"></a>(<span class="kw">setq</span> olivetti-body-width <span class="dv">94</span>)</span></code></pre>
</div>
<h1 id="reading-mode">Reading Mode</h1>
<p>
      When writing or reading I like a couple of things different. I like to
      open up olivetti, disable the line numbers and the modeline. This function
      allows me to change these settings in one go. Also I have an undo
      function. I have them set to '√∂' and '√ß' as those keys are not used for
      any commands.
    </p>
<p><strong>Reading Function:</strong></p>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb12">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb12-1"><a aria-hidden="true" href="#cb12-1" tabindex="-1"></a>(<span class="kw">defun</span><span class="fu"> efe/reading-mode </span>()</span>
<span id="cb12-2"><a aria-hidden="true" href="#cb12-2" tabindex="-1"></a>  <span class="st">"Toggle reading mode."</span></span>
<span id="cb12-3"><a aria-hidden="true" href="#cb12-3" tabindex="-1"></a>  (interactive)</span>
<span id="cb12-4"><a aria-hidden="true" href="#cb12-4" tabindex="-1"></a>  (hide-mode-line-mode +1)</span>
<span id="cb12-5"><a aria-hidden="true" href="#cb12-5" tabindex="-1"></a>  (olivetti-mode)</span>
<span id="cb12-6"><a aria-hidden="true" href="#cb12-6" tabindex="-1"></a>  (menu-bar--display-line-numbers-mode-none))</span>
<span id="cb12-7"><a aria-hidden="true" href="#cb12-7" tabindex="-1"></a>(global-set-key (kbd <span class="st">"C-√∂"</span>) <span class="dt">'efe/reading-mode</span>)</span></code></pre>
</div>
<p><strong>Undo Function:</strong></p>
<div class="sourceCode" data-org-language="emacs-lisp" id="cb13">
<pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb13-1"><a aria-hidden="true" href="#cb13-1" tabindex="-1"></a>(<span class="kw">defun</span><span class="fu"> efe/undo-reading-mode </span>()</span>
<span id="cb13-2"><a aria-hidden="true" href="#cb13-2" tabindex="-1"></a>  <span class="st">"undo reading mode."</span></span>
<span id="cb13-3"><a aria-hidden="true" href="#cb13-3" tabindex="-1"></a>  (interactive)</span>
<span id="cb13-4"><a aria-hidden="true" href="#cb13-4" tabindex="-1"></a>  (hide-mode-line-mode <span class="op">-</span><span class="dv">1</span>)</span>
<span id="cb13-5"><a aria-hidden="true" href="#cb13-5" tabindex="-1"></a>  (<span class="kw">setq</span> olivetti-mode <span class="kw">nil</span>)</span>
<span id="cb13-6"><a aria-hidden="true" href="#cb13-6" tabindex="-1"></a>  (menu-bar--display-line-numbers-mode-absolute))</span>
<span id="cb13-7"><a aria-hidden="true" href="#cb13-7" tabindex="-1"></a>(global-set-key (kbd <span class="st">"C-√ß"</span>) <span class="dt">'efe/undo-reading-mode</span>)</span></code></pre>
</div>
<h1 id="changing-the-icon">Changing the Icon</h1>
<p>
      Lastly, I like to use this
      <a href="https://commons.wikimedia.org/wiki/File:Emacs-logo.svg">Icon</a>.
      It is quite old but it suits my style.
    </p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/eye_candy/index.html</link>
  <guid>https://ismailefe.org/blog/eye_candy/index.html</guid>
  <pubDate>Sun, 14 Jan 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>My Top Album Picks For 2023</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">My Top Album Picks For 2023</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-01-18</p>
</header>
<p>
      2023 might be my busiest year yet. As a first-year in my major, I'm
      discovering a new city, giving tons of presentations, and balancing my
      relationships. As a result, I've had less time to discover and enjoy new
      music.
    </p>
<p>
      In spite of this I found lots of good record to listen to. Here are my top
      picks of 2023.
    </p>
<p><em>this listing is in no particular order.</em></p>
<h1 id="scaring-the-hoes">1. SCARING THE HOES</h1>
<div class="artwork">
<img alt="The artwork of Scaring the Hoes." class="artwork" src="/blog/best_albums_2023/pics/scaring.webp"/>
</div>
<div class="dogtag">
<p class="dogtag">Genre: Hip hop</p>
<p class="dogtag">Artists: JPEGMAFIA &amp; Danny Brown</p>
</div>
<p>
      Until the announcement of this album I've have never heard of Danny Brown.
      And honestly, I didn't care who he was, because I knew that if JPEGMAFIA
      was one of the co-artists of this project, it would be good. When the
      first song 'lean beef patty' came out, I knew I was right.
    </p>
<p>
      But I have to be honest, this album is not for everyone. It has a rough
      and dirty sound. Lots of beat switches and samples that are straight from
      a forgotten graveyard. But these are the exact reasons why I love this
      album so much. This album is your weird friend that always do niche movie
      references and that joke about internet memes. When done is dose, which
      SCARING THE HOES does, it feels like a different and fun thing.
    </p>
<h1 id="lets-start-here.">2. Let's Start Here.</h1>
<div class="artwork">
<img alt="The artwork of Let's start here." class="artwork" src="/blog/best_albums_2023/pics/lets.webp"/>
</div>
<div class="dogtag">
<p class="dogtag">Genre: Psychedelic rock</p>
<p class="dogtag">Artists: Lil Yachty</p>
</div>
<p>
      I always knew Lil Yachty as a lighthearted rapper. So, when I heard that
      he had made a Psychedelic Rock album, I knew I had to check it out.
    </p>
<p>
      On my first listen, the Pink Floyd influence was pretty apparent but there
      was something different. His sound was fun, catchy and like how a
      Psychedelic Rock should be; it was <em>trippy</em>. And the album stayed
      that way, it was fresh every time I listened to it. That's why I spend the
      quarter of my year listening to this album.
    </p>
<h1 id="utopia">3. UTOPIA</h1>
<div class="artwork">
<img alt="The artwork of UTOPIA." class="artwork" src="/blog/best_albums_2023/pics/utopia.webp"/>
</div>
<div class="dogtag">
<p class="dogtag">Genre: Hip hop</p>
<p class="dogtag">Artists: Travis Scoot</p>
</div>
<p>
      Utopia is an album in which Travis Scott tries to return to his roots. It
      features raw cuts and a plethora of different voices.
    </p>
<p>
      This album was in the making for about 4 years. And you can tell this by
      how polished it is. Also, there are 52 beat switches in the album. So,
      every song feels like you are listening to an
      <a href="https://en.wikipedia.org/wiki/Extended_play">EP</a>.
    </p>
<h1 id="latin-virgin">4. LATIN VIRGIN</h1>
<div class="artwork">
<img alt="The artwork of LATIN VIRGIN." class="artwork" src="/blog/best_albums_2023/pics/latin.webp"/>
</div>
<div class="dogtag">
<p class="dogtag">Genre: Hip hop</p>
<p class="dogtag">Artists: Alizade</p>
</div>
<p>
      This is a Turkish release, and one of my favorites. The reason why I love
      this album so much is that it's a big milestone for the Turkish rap scene.
      For a really long time the scene was populated by people who claim that
      woman weren't able to make good rap tracks and those few who made good rap
      tracks were people who were very conservative of their bodies. Alizade
      showed that you don't have to hide your body to make good rap song. While
      her songs lack in the lyrics department she more than makes up for it by
      using different types of sounds and colorful beats in her songs.
    </p>
<p>
      While she is still criticized in Turkey for showing off her body and not
      being a proper <em>'lyricist'</em>, I admire what she is bringing to the
      table in the Turkish rap scene.
    </p>
<h1 id="for-all-the-dogs">5. For All The Dogs</h1>
<div class="artwork">
<img alt="The artwork of For All The Dogs." class="artwork" src="/blog/best_albums_2023/pics/dogs.webp"/>
</div>
<div class="dogtag">
<p class="dogtag">Genre: Hip hop</p>
<p class="dogtag">Artists: Drake</p>
</div>
<p>
      I feel like Drake's albums are really a hit or miss. And luckily this
      album is a hit. While this album could cook a bit more, I like how raw it
      is. There are bunch of features I really like and it is a fun album.
    </p>
<p>
      He really needs to not take himself so seriously, he shines best when he
      has fun too.
    </p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/best_albums_2023/index.html</link>
  <guid>https://ismailefe.org/blog/best_albums_2023/index.html</guid>
  <pubDate>Thu, 18 Jan 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>My Favorite Themes</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">My Favorite Themes</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-01-25</p>
</header>
<p>
      I use a lot of apps that allow me to use custom themes. While most people
      who are into customizing their setup like to choose one theme, I like
      different themes for different apps. Here are the themes I use.
    </p>
<h1 id="lighthaus">Lighthaus</h1>
<img alt="Image of Bear, my note-taking app." src="/blog/favorite_themes/pics/bear.png"/>
<ul>
<li><a href="https://lighthaustheme.com/">Lighthaus Website</a></li>
</ul>
<p>
      I use this theme for <a href="https://bear.app/">Bear</a>. It's real easy
      on the eyes and complements the bear font.
    </p>
<h1 id="mountain">Mountain</h1>
<img alt="Image of Kitty, my terminal emulator app." src="/blog/favorite_themes/pics/kitty.png"/>
<ul>
<li>
<a href="https://github.com/mountain-theme/Mountain">Mountain Repo</a>
</li>
</ul>
<p>
      This theme is used for the
      <a href="https://sw.kovidgoyal.net/kitty/">kitty terminal</a>. I've been
      trying different themes for kitty for about 4 years. Mountain is by far
      the best.
    </p>
<h1 id="ros√©-pine">Ros√© Pine</h1>
<img alt="Image of vs-code, my code editor app." src="/blog/favorite_themes/pics/vscode.png"/>
<ul>
<li><a href="https://rosepinetheme.com/">Ros√© Pine Website</a></li>
</ul>
<p>
      There are tons of options for
      <a href="https://code.visualstudio.com/">vs-code</a>. Ros√© Pine is really
      polished and looks great, nothing to complain.
    </p>
<h1 id="kanagawa">Kanagawa</h1>
<img alt="Image of Emacs, my writing and reading app." src="/blog/favorite_themes/pics/emacs.png"/>
<ul>
<li>
<a href="https://github.com/meritamen/emacs-kanagawa-theme/blob/master/kanagawa-theme.el">Kanagawa Repo</a>
</li>
</ul>
<p>
      I saved the best for last, this is an Emacs theme inspired by the colors
      of the famous painting by Katsushika Hokusai. I really love this theme,
      the colors are perfect for reading and writing. It might not work this
      well for programming but luckily I don't use Emacs for that.
    </p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/favorite_themes/index.html</link>
  <guid>https://ismailefe.org/blog/favorite_themes/index.html</guid>
  <pubDate>Thu, 25 Jan 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>RSS Solutions</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">RSS Solutions</h1>
<p class="author">
<p class="author">ƒ∞smail Efe Top</p>
</p>
<p class="date">2024-02-01</p>
</header>
<h1 id="my-problem">My problem</h1>
<p>
      I love reading personal blogs, since I love them so much I decided to make
      one myself a couple of weeks ago.
    </p>
<p>
      There were a lot of framework projects for personal blogs like
      <a href="https://gohugo.io/">hugo</a>,
      <a href="https://astro.build/">Astro JS</a> and
      <a href="https://jekyllrb.com/">Jekyll</a>. But for different reasons I
      found them quite restrictive. Since I was already using Emacs for most of
      my writing I thought I could use org-mode to write blog posts and use
      pandoc to convert them to HTML. It worked quite well. This is blog is the
      result of that. But this method has it's downsides, you have to do some
      manual labor. And this includes RSS.
    </p>
<h1 id="rss">RSS</h1>
<p>
      RSS is
      <strong>"a standardized system for the distribution of content from an online
        publisher."</strong>
      In a nutshell, it is a file you host that has all the important metadata
      like what are the posts in your blog, who wrote them, and what are the
      posts about.
    </p>
<p>
      The frameworks I mention have solutions for automating the generation of
      RSS files. I also found a solution that works for exactly what I do,
      <a href="https://github.com/emacsmirror/webfeeder">webfeeder</a>. With the
      webfeeder I was able to achieve the bare minimum, but anything more than
      that required a more extensive knowledge of the lisp language.
    </p>
<p>
      After all this, I felt like I had to dive deeper to RSS. I already had a
      basic understanding, but looking at the RSS feeds of different sites gave
      me the knowledge and the courage to write a script that automated RSS
      generation.
    </p>
<h1 id="basics-of-rss">Basics of RSS</h1>
<p>
      RSS is simply a big nested XML file. You start by declaring the usage and
      the version of the file.
    </p>
<div class="sourceCode" id="cb1">
<pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb1-1"><a aria-hidden="true" href="#cb1-1" tabindex="-1"></a>&lt;<span class="kw">rss</span><span class="ot"> xmlns:atom=</span><span class="st">"http://www.w3.org/2005/Atom"</span><span class="ot"> version=</span><span class="st">"2.0"</span>&gt;</span></code></pre>
</div>
<p>Then you open a channel tag and give your basic information.</p>
<div class="sourceCode" id="cb2">
<pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb2-1"><a aria-hidden="true" href="#cb2-1" tabindex="-1"></a>&lt;<span class="kw">channel</span>&gt;</span>
<span id="cb2-2"><a aria-hidden="true" href="#cb2-2" tabindex="-1"></a>&lt;<span class="kw">title</span>&gt;ƒ∞smail Efe's Blog Site&lt;/<span class="kw">title</span>&gt;</span>
<span id="cb2-3"><a aria-hidden="true" href="#cb2-3" tabindex="-1"></a>&lt;<span class="kw">link</span>&gt;https://ismailefe.org/&lt;/<span class="kw">link</span>&gt;</span>
<span id="cb2-4"><a aria-hidden="true" href="#cb2-4" tabindex="-1"></a>&lt;<span class="kw">description</span>&gt;ƒ∞smail Efe's Second Brain.&lt;/<span class="kw">description</span>&gt;</span>
<span id="cb2-5"><a aria-hidden="true" href="#cb2-5" tabindex="-1"></a>&lt;<span class="kw">atom:link</span><span class="ot"> href=</span><span class="st">"https://ismailefe.org/feed.xml"</span><span class="ot"> rel=</span><span class="st">"self"</span><span class="ot"> type=</span><span class="st">"application/rss+xml"</span>/&gt;</span>
<span id="cb2-6"><a aria-hidden="true" href="#cb2-6" tabindex="-1"></a>&lt;<span class="kw">lastBuildDate</span>&gt;Thu, 01 Feb 2024 11:27:51 +0300&lt;/<span class="kw">lastBuildDate</span>&gt;</span></code></pre>
</div>
<p>
      Now we can start giving it the key items. These are going to be your
      posts. I am going to give you an example.
    </p>
<div class="sourceCode" id="cb3">
<pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb3-1"><a aria-hidden="true" href="#cb3-1" tabindex="-1"></a>&lt;<span class="kw">item</span>&gt;</span>
<span id="cb3-2"><a aria-hidden="true" href="#cb3-2" tabindex="-1"></a>&lt;<span class="kw">title</span>&gt;My EDC Essentials.&lt;/<span class="kw">title</span>&gt;</span>
<span id="cb3-3"><a aria-hidden="true" href="#cb3-3" tabindex="-1"></a>&lt;<span class="kw">description</span>&gt;</span>
<span id="cb3-4"><a aria-hidden="true" href="#cb3-4" tabindex="-1"></a><span class="bn">&lt;![CDATA[</span> &lt;!DOCTYPE html&gt; &lt;html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang=""&gt;&lt;body&gt;YOUR HTML CONTENT&lt;/body&gt;&lt;/html&gt; <span class="bn">]]&gt;</span></span>
<span id="cb3-5"><a aria-hidden="true" href="#cb3-5" tabindex="-1"></a>&lt;/<span class="kw">description</span>&gt;</span>
<span id="cb3-6"><a aria-hidden="true" href="#cb3-6" tabindex="-1"></a>&lt;<span class="kw">author</span>&gt;ismailefetop@gmail.com (ƒ∞smail Efe Top)&lt;/<span class="kw">author</span>&gt;</span>
<span id="cb3-7"><a aria-hidden="true" href="#cb3-7" tabindex="-1"></a>&lt;<span class="kw">link</span>&gt;https://ismailefe.org/blog/my_edc/index.html&lt;/<span class="kw">link</span>&gt;</span>
<span id="cb3-8"><a aria-hidden="true" href="#cb3-8" tabindex="-1"></a>&lt;<span class="kw">guid</span>&gt;https://ismailefe.org/blog/my_edc/index.html&lt;/<span class="kw">guid</span>&gt;</span>
<span id="cb3-9"><a aria-hidden="true" href="#cb3-9" tabindex="-1"></a>&lt;<span class="kw">pubDate</span>&gt;Sun, 14 Jan 2024 00:00:00 +0300&lt;/<span class="kw">pubDate</span>&gt;</span>
<span id="cb3-10"><a aria-hidden="true" href="#cb3-10" tabindex="-1"></a>&lt;/<span class="kw">item</span>&gt;</span></code></pre>
</div>
<p>Let's tie the loose ends.</p>
<div class="sourceCode" id="cb4">
<pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb4-1"><a aria-hidden="true" href="#cb4-1" tabindex="-1"></a><span class="er">&lt;</span>/channel&gt;</span>
<span id="cb4-2"><a aria-hidden="true" href="#cb4-2" tabindex="-1"></a><span class="er">&lt;</span>/rss&gt;</span></code></pre>
</div>
<p>This is what a basic RSS file for a blog looks like.</p>
<h1 id="automation">Automation</h1>
<p>
      I wanted to write this script in rust but I am still learning, so I
      decided to use python for this. Here is what I did.
    </p>
<div class="sourceCode" id="cb5">
<pre class="sourceCode python"><code class="sourceCode python"><span id="cb5-1"><a aria-hidden="true" href="#cb5-1" tabindex="-1"></a><span class="im">from</span> datetime <span class="im">import</span> datetime</span>
<span id="cb5-2"><a aria-hidden="true" href="#cb5-2" tabindex="-1"></a><span class="im">from</span> bs4 <span class="im">import</span> BeautifulSoup</span>
<span id="cb5-3"><a aria-hidden="true" href="#cb5-3" tabindex="-1"></a></span>
<span id="cb5-4"><a aria-hidden="true" href="#cb5-4" tabindex="-1"></a>system_header <span class="op">=</span> <span class="st">"/Users/ismailefetop/projects/org-blog/ismailefe_org"</span></span>
<span id="cb5-5"><a aria-hidden="true" href="#cb5-5" tabindex="-1"></a>website_header<span class="op">=</span> <span class="st">"https://ismailefe.org"</span></span>
<span id="cb5-6"><a aria-hidden="true" href="#cb5-6" tabindex="-1"></a>blog_posts <span class="op">=</span> [<span class="st">"/blog/my_edc/index.html"</span>,</span>
<span id="cb5-7"><a aria-hidden="true" href="#cb5-7" tabindex="-1"></a>              <span class="st">"/blog/eye_candy/index.html"</span>,</span>
<span id="cb5-8"><a aria-hidden="true" href="#cb5-8" tabindex="-1"></a>              <span class="st">"/blog/best_albums_2023/index.html"</span>,</span>
<span id="cb5-9"><a aria-hidden="true" href="#cb5-9" tabindex="-1"></a>              <span class="st">"/blog/favorite_themes/index.html"</span></span>
<span id="cb5-10"><a aria-hidden="true" href="#cb5-10" tabindex="-1"></a>              ]</span>
<span id="cb5-11"><a aria-hidden="true" href="#cb5-11" tabindex="-1"></a></span>
<span id="cb5-12"><a aria-hidden="true" href="#cb5-12" tabindex="-1"></a>update_time <span class="op">=</span> <span class="bu">str</span>(datetime.now().strftime(<span class="st">'%a, </span><span class="sc">%d</span><span class="st"> %b %Y %H:%M:%S'</span>))<span class="op">+</span><span class="st">' +0300'</span></span>
<span id="cb5-13"><a aria-hidden="true" href="#cb5-13" tabindex="-1"></a></span>
<span id="cb5-14"><a aria-hidden="true" href="#cb5-14" tabindex="-1"></a>feed_output <span class="op">=</span> <span class="st">"/Users/ismailefetop/projects/org-blog/ismailefe_org/feed.xml"</span></span>
<span id="cb5-15"><a aria-hidden="true" href="#cb5-15" tabindex="-1"></a>xml_file <span class="op">=</span> <span class="bu">open</span>(feed_output, <span class="st">"w"</span>)</span>
<span id="cb5-16"><a aria-hidden="true" href="#cb5-16" tabindex="-1"></a></span>
<span id="cb5-17"><a aria-hidden="true" href="#cb5-17" tabindex="-1"></a>xml_file.write(</span>
<span id="cb5-18"><a aria-hidden="true" href="#cb5-18" tabindex="-1"></a><span class="ss">f'''&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span>
<span id="cb5-19"><a aria-hidden="true" href="#cb5-19" tabindex="-1"></a><span class="ss">&lt;rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"&gt;</span></span>
<span id="cb5-20"><a aria-hidden="true" href="#cb5-20" tabindex="-1"></a><span class="ss">&lt;channel&gt;</span></span>
<span id="cb5-21"><a aria-hidden="true" href="#cb5-21" tabindex="-1"></a><span class="ss">&lt;title&gt;ƒ∞smail Efe's Blog Site&lt;/title&gt;</span></span>
<span id="cb5-22"><a aria-hidden="true" href="#cb5-22" tabindex="-1"></a><span class="ss">&lt;link&gt;https://ismailefe.org/&lt;/link&gt;</span></span>
<span id="cb5-23"><a aria-hidden="true" href="#cb5-23" tabindex="-1"></a><span class="ss">&lt;description&gt;ƒ∞smail Efe's Second Brain.&lt;/description&gt;</span></span>
<span id="cb5-24"><a aria-hidden="true" href="#cb5-24" tabindex="-1"></a><span class="ss">&lt;atom:link href="https://ismailefe.org/feed.xml" rel="self" type="application/rss+xml"/&gt;</span></span>
<span id="cb5-25"><a aria-hidden="true" href="#cb5-25" tabindex="-1"></a><span class="ss">&lt;lastBuildDate&gt;</span><span class="sc">{</span>update_time<span class="sc">}</span><span class="ss">&lt;/lastBuildDate&gt;'''</span></span>
<span id="cb5-26"><a aria-hidden="true" href="#cb5-26" tabindex="-1"></a>)</span>
<span id="cb5-27"><a aria-hidden="true" href="#cb5-27" tabindex="-1"></a></span>
<span id="cb5-28"><a aria-hidden="true" href="#cb5-28" tabindex="-1"></a>xml_file.close()</span>
<span id="cb5-29"><a aria-hidden="true" href="#cb5-29" tabindex="-1"></a></span>
<span id="cb5-30"><a aria-hidden="true" href="#cb5-30" tabindex="-1"></a><span class="co"># Below function is partially written by ChatGPT.</span></span>
<span id="cb5-31"><a aria-hidden="true" href="#cb5-31" tabindex="-1"></a><span class="kw">def</span> parse_html(filename_arg):</span>
<span id="cb5-32"><a aria-hidden="true" href="#cb5-32" tabindex="-1"></a>    <span class="co"># Read the HTML file</span></span>
<span id="cb5-33"><a aria-hidden="true" href="#cb5-33" tabindex="-1"></a>    <span class="cf">with</span> <span class="bu">open</span>(filename_arg, <span class="st">'r'</span>, encoding<span class="op">=</span><span class="st">'utf-8'</span>) <span class="im">as</span> <span class="bu">file</span>:</span>
<span id="cb5-34"><a aria-hidden="true" href="#cb5-34" tabindex="-1"></a>        html_content <span class="op">=</span> <span class="bu">file</span>.read()</span>
<span id="cb5-35"><a aria-hidden="true" href="#cb5-35" tabindex="-1"></a></span>
<span id="cb5-36"><a aria-hidden="true" href="#cb5-36" tabindex="-1"></a>    <span class="co"># Parse the HTML content using BeautifulSoup</span></span>
<span id="cb5-37"><a aria-hidden="true" href="#cb5-37" tabindex="-1"></a>    soup <span class="op">=</span> BeautifulSoup(html_content, <span class="st">'html.parser'</span>)</span>
<span id="cb5-38"><a aria-hidden="true" href="#cb5-38" tabindex="-1"></a></span>
<span id="cb5-39"><a aria-hidden="true" href="#cb5-39" tabindex="-1"></a>    <span class="co"># Extract title</span></span>
<span id="cb5-40"><a aria-hidden="true" href="#cb5-40" tabindex="-1"></a>    title_tag <span class="op">=</span> soup.find(<span class="st">'title'</span>)</span>
<span id="cb5-41"><a aria-hidden="true" href="#cb5-41" tabindex="-1"></a>    title <span class="op">=</span> title_tag.text <span class="cf">if</span> title_tag <span class="cf">else</span> <span class="va">None</span></span>
<span id="cb5-42"><a aria-hidden="true" href="#cb5-42" tabindex="-1"></a></span>
<span id="cb5-43"><a aria-hidden="true" href="#cb5-43" tabindex="-1"></a>    <span class="co"># Extract date (assuming date is in an element with class="date")</span></span>
<span id="cb5-44"><a aria-hidden="true" href="#cb5-44" tabindex="-1"></a>    date_tag <span class="op">=</span> soup.find(class_<span class="op">=</span><span class="st">'date'</span>)</span>
<span id="cb5-45"><a aria-hidden="true" href="#cb5-45" tabindex="-1"></a>    date <span class="op">=</span> date_tag.text <span class="cf">if</span> date_tag <span class="cf">else</span> <span class="va">None</span></span>
<span id="cb5-46"><a aria-hidden="true" href="#cb5-46" tabindex="-1"></a></span>
<span id="cb5-47"><a aria-hidden="true" href="#cb5-47" tabindex="-1"></a>    <span class="co"># Extract body content as HTML</span></span>
<span id="cb5-48"><a aria-hidden="true" href="#cb5-48" tabindex="-1"></a>    body_tag <span class="op">=</span> soup.body</span>
<span id="cb5-49"><a aria-hidden="true" href="#cb5-49" tabindex="-1"></a>    body_html <span class="op">=</span> <span class="bu">str</span>(body_tag) <span class="cf">if</span> body_tag <span class="cf">else</span> <span class="va">None</span></span>
<span id="cb5-50"><a aria-hidden="true" href="#cb5-50" tabindex="-1"></a></span>
<span id="cb5-51"><a aria-hidden="true" href="#cb5-51" tabindex="-1"></a>    post_dict <span class="op">=</span> {<span class="st">"title"</span>:title,<span class="st">"date"</span>:date,<span class="st">"body_html"</span>:body_html}</span>
<span id="cb5-52"><a aria-hidden="true" href="#cb5-52" tabindex="-1"></a></span>
<span id="cb5-53"><a aria-hidden="true" href="#cb5-53" tabindex="-1"></a>    <span class="cf">return</span> post_dict</span>
<span id="cb5-54"><a aria-hidden="true" href="#cb5-54" tabindex="-1"></a></span>
<span id="cb5-55"><a aria-hidden="true" href="#cb5-55" tabindex="-1"></a><span class="co"># Below function is written by ChatGPT.</span></span>
<span id="cb5-56"><a aria-hidden="true" href="#cb5-56" tabindex="-1"></a><span class="kw">def</span> format_date(input_date):</span>
<span id="cb5-57"><a aria-hidden="true" href="#cb5-57" tabindex="-1"></a>    <span class="co"># Convert input date string to a datetime object</span></span>
<span id="cb5-58"><a aria-hidden="true" href="#cb5-58" tabindex="-1"></a>    input_datetime <span class="op">=</span> datetime.strptime(input_date, <span class="st">'%Y-%m-</span><span class="sc">%d</span><span class="st">'</span>)</span>
<span id="cb5-59"><a aria-hidden="true" href="#cb5-59" tabindex="-1"></a></span>
<span id="cb5-60"><a aria-hidden="true" href="#cb5-60" tabindex="-1"></a>    <span class="co"># Format the datetime object to the desired string format</span></span>
<span id="cb5-61"><a aria-hidden="true" href="#cb5-61" tabindex="-1"></a>    formatted_date <span class="op">=</span> input_datetime.strftime(<span class="st">'%a, </span><span class="sc">%d</span><span class="st"> %b %Y'</span>)</span>
<span id="cb5-62"><a aria-hidden="true" href="#cb5-62" tabindex="-1"></a></span>
<span id="cb5-63"><a aria-hidden="true" href="#cb5-63" tabindex="-1"></a>    <span class="cf">return</span> formatted_date</span>
<span id="cb5-64"><a aria-hidden="true" href="#cb5-64" tabindex="-1"></a></span>
<span id="cb5-65"><a aria-hidden="true" href="#cb5-65" tabindex="-1"></a><span class="cf">for</span> post <span class="kw">in</span> blog_posts:</span>
<span id="cb5-66"><a aria-hidden="true" href="#cb5-66" tabindex="-1"></a>    post_dictionary <span class="op">=</span> parse_html(system_header<span class="op">+</span>post)</span>
<span id="cb5-67"><a aria-hidden="true" href="#cb5-67" tabindex="-1"></a>    xml_file <span class="op">=</span> <span class="bu">open</span>(feed_output, <span class="st">"a"</span>)</span>
<span id="cb5-68"><a aria-hidden="true" href="#cb5-68" tabindex="-1"></a>    xml_file.write(<span class="ss">f'''</span></span>
<span id="cb5-69"><a aria-hidden="true" href="#cb5-69" tabindex="-1"></a><span class="ss">&lt;item&gt;</span></span>
<span id="cb5-70"><a aria-hidden="true" href="#cb5-70" tabindex="-1"></a><span class="ss">  &lt;title&gt;</span><span class="sc">{</span>post_dictionary[<span class="st">"title"</span>]<span class="sc">}</span><span class="ss">&lt;/title&gt;</span></span>
<span id="cb5-71"><a aria-hidden="true" href="#cb5-71" tabindex="-1"></a><span class="ss">  &lt;description&gt;&lt;![CDATA[&lt;!DOCTYPE html&gt;</span></span>
<span id="cb5-72"><a aria-hidden="true" href="#cb5-72" tabindex="-1"></a><span class="ss">&lt;html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang=""&gt;</span><span class="sc">{</span>post_dictionary[<span class="st">"body_html"</span>]<span class="sc">}</span><span class="ss">&lt;/html&gt;]]&gt;&lt;/description&gt;</span></span>
<span id="cb5-73"><a aria-hidden="true" href="#cb5-73" tabindex="-1"></a><span class="ss">  &lt;author&gt;ismailefetop@gmail.com (ƒ∞smail Efe Top)&lt;/author&gt;</span></span>
<span id="cb5-74"><a aria-hidden="true" href="#cb5-74" tabindex="-1"></a><span class="ss">  &lt;link&gt;</span><span class="sc">{</span>website_header<span class="op">+</span>post<span class="sc">}</span><span class="ss">&lt;/link&gt;</span></span>
<span id="cb5-75"><a aria-hidden="true" href="#cb5-75" tabindex="-1"></a><span class="ss">  &lt;guid&gt;</span><span class="sc">{</span>website_header<span class="op">+</span>post<span class="sc">}</span><span class="ss">&lt;/guid&gt;</span></span>
<span id="cb5-76"><a aria-hidden="true" href="#cb5-76" tabindex="-1"></a><span class="ss">  &lt;pubDate&gt;</span><span class="sc">{</span>format_date(post_dictionary[<span class="st">"date"</span>])<span class="sc">}</span><span class="ss"> 00:00:00 +0300&lt;/pubDate&gt;</span></span>
<span id="cb5-77"><a aria-hidden="true" href="#cb5-77" tabindex="-1"></a><span class="ss">&lt;/item&gt;</span></span>
<span id="cb5-78"><a aria-hidden="true" href="#cb5-78" tabindex="-1"></a><span class="ss">'''</span>)</span>
<span id="cb5-79"><a aria-hidden="true" href="#cb5-79" tabindex="-1"></a>    xml_file.close()</span>
<span id="cb5-80"><a aria-hidden="true" href="#cb5-80" tabindex="-1"></a></span>
<span id="cb5-81"><a aria-hidden="true" href="#cb5-81" tabindex="-1"></a>xml_file <span class="op">=</span> <span class="bu">open</span>(feed_output, <span class="st">"a"</span>)</span>
<span id="cb5-82"><a aria-hidden="true" href="#cb5-82" tabindex="-1"></a>xml_file.write(<span class="st">'''</span></span>
<span id="cb5-83"><a aria-hidden="true" href="#cb5-83" tabindex="-1"></a><span class="st">&lt;/channel&gt;</span></span>
<span id="cb5-84"><a aria-hidden="true" href="#cb5-84" tabindex="-1"></a><span class="st">&lt;/rss&gt;'''</span>)</span>
<span id="cb5-85"><a aria-hidden="true" href="#cb5-85" tabindex="-1"></a>xml_file.close()</span></code></pre>
</div>
<p>
      When I write a new post, all I have to do is add the name of the post to
      the blog posts list. Feel free to modify it to your heart's content. As a
      note, while working on this project, I used the
      <a href="https://validator.w3.org/feed/">RSS Validator</a>. This site
      checks whether your RSS feed is valid and highlights any problems you
      might have. It really is a life-save when working on RSS files.
    </p>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/rss/index.html</link>
  <guid>https://ismailefe.org/blog/rss/index.html</guid>
  <pubDate>Thu, 01 Feb 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>University File Structure</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">University File Structure</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-02-18</p>
</header>
<p>
      I have a very structured file management system for my university life. I
      save almost everything and everything that I saved has a place. Let's
      start with the main folder.
    </p>
<h1 id="uni-folder">Uni Folder</h1>
<p>
      I have a folder called 'uni' in my icloud drive. This folder sync between
      my macbook and iphone. This allows me to access my PDFs and docs with ease
      from either of my devices. I have a shortcut to this folder on my ~(home)
      directory. Here is what this folder looks like on the first level.
    </p>
<pre><code>uni
‚îú‚îÄ‚îÄ citation
‚îú‚îÄ‚îÄ current-course -&gt; /Users/ismailefetop/uni/first_year/02/
‚îú‚îÄ‚îÄ etc
‚îú‚îÄ‚îÄ first_year
‚îî‚îÄ‚îÄ prep
</code></pre>
<ul>
<li>
        Citation folder houses my
        <a href="https://www.zotero.org/">zotero</a> bookmarks. I use an
        <a href="https://github.com/andras-simonyi/citeproc-el">Emacs extension</a>
        which allows me to cite those bookmarks.
      </li>
<li>Current course folder is a shortcut to my current semester.</li>
<li>
        etc folder houses stuff that are necessary but aren't specific enough
        for a folder.
      </li>
<li>
        first_year and prep are for categorizing years in my university life.
      </li>
</ul>
<h1 id="semester-folders">Semester folders</h1>
<p>
      Every year houses 2 semester folders inside it. Because my classes changes
      every semester it is the easiest way to categorize my classes.
      <strong>For example:</strong>
</p>
<pre><code>first_year
‚îú‚îÄ‚îÄ 01
‚îî‚îÄ‚îÄ 02
</code></pre>
<p>
      Let's look at the first semester of my first year. This is the first
      level.
    </p>
<pre><code>01
‚îú‚îÄ‚îÄ ceit100
‚îú‚îÄ‚îÄ eds200
‚îú‚îÄ‚îÄ fle134
‚îú‚îÄ‚îÄ fle137
‚îú‚îÄ‚îÄ fle147
‚îú‚îÄ‚îÄ hist2201
‚îú‚îÄ‚îÄ school.org
‚îú‚îÄ‚îÄ todo.org
‚îî‚îÄ‚îÄ turk103
</code></pre>
<p>
      Every class has it's own folder. I will talk about them more in the next
      section.
    </p>
<h2 id="school.org">school.org</h2>
<p>
      This file is my semester's guidebook. It houses my class schedule, the
      classrooms, and shortcuts to class folders. It uses
      <a href="https://orgmode.org">org mode</a>, which is similar to
      <a href="https://www.markdownguide.org/">markdown</a> but more powerful.
    </p>
<h2 id="todo.org">todo.org</h2>
<p>
      I use <a href="https://orgmode.org/manual/Capture.html">org capture</a>,
      which allow me to write quick todo items when writing stuff in Emacs.
      These todo bits go into this file.
    </p>
<h1 id="class-folders">Class Folders</h1>
<p>
      These folders are the meat and bones of my setup. They hold everything
      about that particular class and they do it in <em>style</em>. For example
      let's look at my eds200 folder.
    </p>
<pre><code>eds200
‚îú‚îÄ‚îÄ eds200.org
‚îú‚îÄ‚îÄ homeworks
‚îú‚îÄ‚îÄ notes
‚îî‚îÄ‚îÄ odtuclass
</code></pre>
<h2 id="eds200.org">eds200.org</h2>
<p>
      Every class folder has an org file with that classes name. It houses
      information such as the instructor's name, email address and their office
      hours. It also have quick access to folders.
    </p>
<h2 id="homeworks-folder">homeworks folder</h2>
<p>
      Every homework related thing goes into this folder and every homework has
      it's own folder.
    </p>
<h2 id="notes-folder">notes folder</h2>
<p>
      I divide homeworks by week. I write notes in org and these org files go
      into appropriate week folder.
    </p>
<h2 id="odtuclass-folder">odtuclass folder</h2>
<p>
      My university uses it's own <a href="https://moodle.org/">moodle</a>. Our
      instructors communicate and give homework to us through there. It is also
      divided by week and the stuff our instructors upload goes into those
      folders.
    </p>
<h1 id="conclusion">Conclusion</h1>
<p>
      It might seem overly complicated at first, but once you get used to it,
      it's very easy to operate. It's definitely better than looking for that
      one file you downloaded weeks ago. And you don't need to know any
      complicated computer stuff to use this system.
      <u>Even though org files are plain text files.</u> You can just change the
      org files with more common text files.
    </p>
<h1 id="sidenote">Sidenote</h1>
<p>
      Creating this folder structure might be cumbersome, so I created this
      python script to ease the process.
    </p>
<div class="sourceCode" id="cb5">
<pre class="sourceCode python"><code class="sourceCode python"><span id="cb5-1"><a aria-hidden="true" href="#cb5-1" tabindex="-1"></a><span class="im">import</span> os</span>
<span id="cb5-2"><a aria-hidden="true" href="#cb5-2" tabindex="-1"></a></span>
<span id="cb5-3"><a aria-hidden="true" href="#cb5-3" tabindex="-1"></a>class_list <span class="op">=</span> [<span class="st">'ba100'</span>,</span>
<span id="cb5-4"><a aria-hidden="true" href="#cb5-4" tabindex="-1"></a>              <span class="st">'hist2202'</span>,</span>
<span id="cb5-5"><a aria-hidden="true" href="#cb5-5" tabindex="-1"></a>              <span class="st">'fle129'</span>,</span>
<span id="cb5-6"><a aria-hidden="true" href="#cb5-6" tabindex="-1"></a>              <span class="st">'fle200'</span>,</span>
<span id="cb5-7"><a aria-hidden="true" href="#cb5-7" tabindex="-1"></a>              <span class="st">'fle280'</span>,</span>
<span id="cb5-8"><a aria-hidden="true" href="#cb5-8" tabindex="-1"></a>              <span class="st">'fle480'</span>,</span>
<span id="cb5-9"><a aria-hidden="true" href="#cb5-9" tabindex="-1"></a>              <span class="st">'turk104'</span>,</span>
<span id="cb5-10"><a aria-hidden="true" href="#cb5-10" tabindex="-1"></a>              <span class="st">'eng102'</span>]</span>
<span id="cb5-11"><a aria-hidden="true" href="#cb5-11" tabindex="-1"></a></span>
<span id="cb5-12"><a aria-hidden="true" href="#cb5-12" tabindex="-1"></a>year <span class="op">=</span> <span class="st">'first_year/'</span></span>
<span id="cb5-13"><a aria-hidden="true" href="#cb5-13" tabindex="-1"></a></span>
<span id="cb5-14"><a aria-hidden="true" href="#cb5-14" tabindex="-1"></a>semester <span class="op">=</span> <span class="st">'02/'</span></span>
<span id="cb5-15"><a aria-hidden="true" href="#cb5-15" tabindex="-1"></a></span>
<span id="cb5-16"><a aria-hidden="true" href="#cb5-16" tabindex="-1"></a>system_path <span class="op">=</span> <span class="st">'/Users/ismailefetop/uni/'</span> <span class="op">+</span> year <span class="op">+</span> semester</span>
<span id="cb5-17"><a aria-hidden="true" href="#cb5-17" tabindex="-1"></a></span>
<span id="cb5-18"><a aria-hidden="true" href="#cb5-18" tabindex="-1"></a><span class="co"># overwriting an exisiting folder might create problems, so the code doesn't do anything if the wanted semester folder exist.</span></span>
<span id="cb5-19"><a aria-hidden="true" href="#cb5-19" tabindex="-1"></a><span class="cf">if</span> os.path.exists(system_path) <span class="op">==</span> <span class="va">True</span>:</span>
<span id="cb5-20"><a aria-hidden="true" href="#cb5-20" tabindex="-1"></a>    <span class="bu">print</span>(<span class="st">'This directory already exists.'</span>)</span>
<span id="cb5-21"><a aria-hidden="true" href="#cb5-21" tabindex="-1"></a>    quit()</span>
<span id="cb5-22"><a aria-hidden="true" href="#cb5-22" tabindex="-1"></a></span>
<span id="cb5-23"><a aria-hidden="true" href="#cb5-23" tabindex="-1"></a>os.makedirs(system_path, exist_ok<span class="op">=</span><span class="va">True</span>)</span>
<span id="cb5-24"><a aria-hidden="true" href="#cb5-24" tabindex="-1"></a></span>
<span id="cb5-25"><a aria-hidden="true" href="#cb5-25" tabindex="-1"></a><span class="cf">with</span> <span class="bu">open</span>(system_path <span class="op">+</span> <span class="st">'school.org'</span>, <span class="st">'w'</span>) <span class="im">as</span> fp:</span>
<span id="cb5-26"><a aria-hidden="true" href="#cb5-26" tabindex="-1"></a>    <span class="cf">pass</span></span>
<span id="cb5-27"><a aria-hidden="true" href="#cb5-27" tabindex="-1"></a></span>
<span id="cb5-28"><a aria-hidden="true" href="#cb5-28" tabindex="-1"></a><span class="cf">with</span> <span class="bu">open</span>(system_path <span class="op">+</span> <span class="st">'todo.org'</span>, <span class="st">'w'</span>) <span class="im">as</span> fp:</span>
<span id="cb5-29"><a aria-hidden="true" href="#cb5-29" tabindex="-1"></a>    <span class="cf">pass</span></span>
<span id="cb5-30"><a aria-hidden="true" href="#cb5-30" tabindex="-1"></a></span>
<span id="cb5-31"><a aria-hidden="true" href="#cb5-31" tabindex="-1"></a><span class="cf">for</span> class_name <span class="kw">in</span> class_list:</span>
<span id="cb5-32"><a aria-hidden="true" href="#cb5-32" tabindex="-1"></a>    class_name_folder <span class="op">=</span> system_path <span class="op">+</span> class_name <span class="op">+</span> <span class="st">'/'</span></span>
<span id="cb5-33"><a aria-hidden="true" href="#cb5-33" tabindex="-1"></a>    os.makedirs(class_name_folder, exist_ok<span class="op">=</span><span class="va">True</span>)</span>
<span id="cb5-34"><a aria-hidden="true" href="#cb5-34" tabindex="-1"></a>    os.makedirs(class_name_folder <span class="op">+</span> <span class="st">'odtuclass/'</span>, exist_ok<span class="op">=</span><span class="va">True</span>)</span>
<span id="cb5-35"><a aria-hidden="true" href="#cb5-35" tabindex="-1"></a>    os.makedirs(class_name_folder <span class="op">+</span> <span class="st">'odtuclass/misc/'</span>, exist_ok<span class="op">=</span><span class="va">True</span>)</span>
<span id="cb5-36"><a aria-hidden="true" href="#cb5-36" tabindex="-1"></a>    os.makedirs(class_name_folder <span class="op">+</span> <span class="st">'notes/'</span>, exist_ok<span class="op">=</span><span class="va">True</span>)</span>
<span id="cb5-37"><a aria-hidden="true" href="#cb5-37" tabindex="-1"></a>    os.makedirs(class_name_folder <span class="op">+</span> <span class="st">'homeworks/'</span>, exist_ok<span class="op">=</span><span class="va">True</span>)</span>
<span id="cb5-38"><a aria-hidden="true" href="#cb5-38" tabindex="-1"></a></span>
<span id="cb5-39"><a aria-hidden="true" href="#cb5-39" tabindex="-1"></a>    <span class="cf">with</span> <span class="bu">open</span>(class_name_folder <span class="op">+</span> <span class="ss">f'</span><span class="sc">{</span>class_name<span class="sc">}</span><span class="ss">.org'</span>, <span class="st">'w'</span>) <span class="im">as</span> fp:</span>
<span id="cb5-40"><a aria-hidden="true" href="#cb5-40" tabindex="-1"></a>        <span class="cf">pass</span></span></code></pre>
</div>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/uni_file_structure/index.html</link>
  <guid>https://ismailefe.org/blog/uni_file_structure/index.html</guid>
  <pubDate>Sun, 18 Feb 2024 00:00:00 +0300</pubDate>
</item>

<item>
  <title>How to give good presentations</title>
  <description><![CDATA[<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><body>
<header id="title-block-header">
<h1 class="title">How to give good presentations</h1>
<p class="author">ƒ∞smail Efe Top</p>
<p class="date">2024-02-23</p>
</header>
<p>
      In my department we give a lot of presentations, so mastering the skill is
      important for a student like me. I learned a lot in my last 2 years at
      metu and I want to share what I learned.
    </p>
<p>
      This guide will include tips about time management, physical environment,
      styling of the slides and other general information.
    </p>
<h1 id="general">General</h1>
<p>
      My first tip would be to <strong>always have an introduction</strong>.
      Introductions are important because they help the listener have a short
      sense of what you are talking about. Diving into a subject without the
      proper introduction can lead to a sense of confusion in the listener.
    </p>
<p>In your introduction you can talk about‚Ä¶</p>
<ul>
<li>General information about your subject</li>
<li>Why you chose that particular subject</li>
<li>Significance and relevance of the subject</li>
<li>
        The key takeaways listeners can expect by the end of the presentation
      </li>
</ul>
<p>
      While it may seem obvious, thanking the listeners at the end is very
      important. We should remember that while we do spend time preparing, they
      also spend their time listening to us.
    </p>
<h1 id="physical-environment">Physical Environment</h1>
<p>
      If you are not giving a presentation in a space designed for it, going
      into there beforehand and removing any distractions can be helpful. For
      example, if you are going to give a presentation in a class or a meeting
      room, adjusting the curtains and cleaning the whiteboard can help
      listeners not lose focus.
    </p>
<p>
      A lot of presenters hide behind a podium. While it can help when you feel
      anxious, it can also lower your presence as a presenter. I would suggest
      not putting anything in front of you and trying to be as close as possible
      to the audience without going into their personal space. Maintaining good
      space and leaning closer when announcing a heading is a good strategy to
      stress the importance of that portion. Other than that, you should
      <strong>never put your hands in your pocket</strong>. Letting the audience
      see your hand fully is always important.
    </p>
<h1 id="presentation-slides">Presentation Slides</h1>
<p>
      First of all, any presentation software works. I use and recommend
      <a href="https://pitch.com">pitch</a>. The most important thing when
      presenting a stylish slide is the font and simplicity. Let me explain
      more.
    </p>
<p>
      Most people try to cram all the information they can into their slides.
      This leads to presentations that look like textbooks. I think that is the
      biggest sin you can commit. This is a big mistake because the presenter is
      the one giving information not the slide. Slides should complement you,
      not replace you. Another reason we shouldn't make slides with a lot of
      text is that they are distracting. While you try to talk about your
      subject, the audience will look and try to read what is on the slide. If
      you MUST put a lot of text or a big picture, you should at least give
      proper time for the audience to look at the slide properly.
    </p>
<p>
      Another mistake I see is that making your background too crowded, this
      makes it hard to read or see whats on the slide. I would suggest a single
      color background with small graphics that are away from the center.
      Another thing to note is the contrast between the color of your background
      and the color of your text. If they don't have good contrast, the text
      might be too hard to read. Having good contrast is especially important
      because while your colors might look good on your fancy computer screen,
      they might blend together on the projector due to low color performance.
      So having a little bit more of a headroom can be a good idea.
    </p>
<p>
      Lastly, using short and simple animations between your slides can be a
      good visual sign of professionalism.
    </p>
<h1 id="time-usage">Time Usage</h1>
<p>
      To be honest, I think this is the most important part. The usage of your
      time dictates how people remember your presentation. If it is too long,
      people can get bored and stop listening to you. And if it is too short,
      people might think that you were unprepared. One of my instructors has a
      great advice on this, he says "When preparing for a presentation, aim for
      the 9/10 of the time allocated to you.". It is a common practice to time
      yourself when preparing. But if you try to make your presentation stretch
      to the time given to you, you will see that it will always be longer when
      doing the actual presentation. With this advice, you can make your speech
      more to the point and easier to follow.
    </p>
<p>
      Addition to this, I would suggest finishing your presentation a couple of
      minutes early. In my opinion this can give a sense of professionalism and
      competence. It is definitely better than finishing late. Just make sure
      that it is no more than 5 minutes.
    </p>
<h1 id="to-conclude">To conclude‚Ä¶</h1>
<ul>
<li>Do an introduction about the subject</li>
<li>Thank the audience for their time at the end</li>
<li>Declutter your presentation environment</li>
<li>Make your body and hands visible</li>
<li>I recommend using pitch for your slides</li>
<li>Do not cram text into slides</li>
<li>Make your slide backgrounds simple</li>
<li>Most of the time a single color background is perfect</li>
<li>Have good contrast between your background and text</li>
<li>Use fast and simple transitions</li>
<li>When preparing aim for the 9/10 of the time allocated to you</li>
<li>Try to finish a couple of minutes early</li>
</ul>
<div class="bottom-header">
<a class="bottom-header-link" href="/">Home</a>
<a class="bottom-header-link" href="mailto:ismailefetop@gmail.com">Mail Me</a>
<a class="bottom-header-link" href="/feed.xml" target="_blank">RSS</a>
<a class="bottom-header-link" href="https://github.com/Ektaynot/ismailefe_org" target="_blank">Source</a>
</div>
<div class="firechickenwebring">
<a href="https://firechicken.club/efe/prev">‚Üê</a>
<a href="https://firechicken.club">üî•‚Å†üêì</a>
<a href="https://firechicken.club/efe/next">‚Üí</a>
</div>
</body></html>]]></description>
  <author>ismailefetop@gmail.com (ƒ∞smail Efe Top)</author>
  <link>https://ismailefe.org/blog/good_presentations/index.html</link>
  <guid>https://ismailefe.org/blog/good_presentations/index.html</guid>
  <pubDate>Fri, 23 Feb 2024 00:00:00 +0300</pubDate>
</item>

</channel>
</rss>